<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-09-16T05:07:22+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss AI &amp; Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1nhh1v1</id>
    <title>Engineer's Guide to Local LLMs with LLaMA.cpp and QwenCode on Linux</title>
    <updated>2025-09-15T09:20:37+00:00</updated>
    <author>
      <name>/u/Limp_Classroom_2645</name>
      <uri>https://old.reddit.com/user/Limp_Classroom_2645</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhh1v1/engineers_guide_to_local_llms_with_llamacpp_and/"&gt; &lt;img alt="Engineer's Guide to Local LLMs with LLaMA.cpp and QwenCode on Linux" src="https://external-preview.redd.it/dssHtWLh-9QdeM9_9eziiNbmQKbtVyxezJ3v7r7eNmc.png?width=320&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=b6ed393b15488f0c723126e979b2c6e17807c6ee" title="Engineer's Guide to Local LLMs with LLaMA.cpp and QwenCode on Linux" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h1&gt;Introduction&lt;/h1&gt; &lt;p&gt;In this write up I will share my local AI setup on Ubuntu that I use for my personal projects as well as professional workflows (local chat, agentic workflows, coding agents, data analysis, synthetic dataset generation, etc).&lt;/p&gt; &lt;p&gt;This setup is particularly useful when I want to generate large amounts of synthetic datasets locally, process large amounts of sensitive data with LLMs in a safe way, use local agents without sending my private data to third party LLM providers, or just use chat/RAGs in complete privacy.&lt;/p&gt; &lt;h1&gt;What you'll learn&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Compile &lt;a href="https://github.com/ggml-org/llama.cpp"&gt;LlamaCPP&lt;/a&gt; on your machine, set it up in your PATH, keep it up to date (compiling from source allows to use the bleeding edge version of llamacpp so you can always get latest features as soon as they are merged into the master branch)&lt;/li&gt; &lt;li&gt;Use llama-server to serve local models with very fast inference speeds&lt;/li&gt; &lt;li&gt;Setup llama-swap to automate model swapping on the fly and use it as your OpenAI compatible API endpoint.&lt;/li&gt; &lt;li&gt;Use systemd to setup llama-swap as a service that boots with your system and automatically restarts when the server config file changes&lt;/li&gt; &lt;li&gt;Integrate local AI in Agent Mode into your terminal with &lt;a href="https://github.com/QwenLM/qwen-code"&gt;QwenCode/OpenCode&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Test some local agentic workflows in Python with &lt;a href="https://www.crewai.com/"&gt;CrewAI&lt;/a&gt; (Part II)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I will also share what models I use for different types of workflows and different advanced configurations for each model (context expansion, parallel batch inference, multi modality, embedding, rereanking, and more.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;This will be a technical write up, and I will skip some things like installing and configuring basic build tools, &lt;a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/"&gt;CUDA toolkit installation&lt;/a&gt;, git, etc, if I do miss some steps that where not obvious to setup, or something doesn't work from your end, please let me know in the comments, I will gladly help you out, and progressively update the article with new information and more details as more people complain about specific aspects of the setup process.&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;Hardware&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;RTX3090 Founders Edition 24GB VRAM&lt;/li&gt; &lt;/ul&gt; &lt;blockquote&gt; &lt;p&gt;The more VRAM you have the larger models you can load, but if you don't have the same GPU as long at it's an NVIDIA GPU it's fine, you can still load smaller models, just don't expect good agentic and tool usage results from smaller LLMs.&lt;/p&gt; &lt;p&gt;RTX3090 can load a Q5 quantized 30B Qwen3 model entirely into VRAM, with up to 140t/s as inference speed and 24k tokens context window (or up 110K tokens with some flash attention magic)&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;Prerequisites&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Experience with working on a Linux Dev Box&lt;/li&gt; &lt;li&gt;&lt;a href="https://ubuntu.com/download"&gt;Ubuntu 24 or 25&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://documentation.ubuntu.com/server/how-to/graphics/install-nvidia-drivers/"&gt;NVIDIA proprietary drivers installed (version 580 at the time of writing)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developer.nvidia.com/cuda-downloads?target_os=Linux&amp;amp;target_arch=x86_64&amp;amp;Distribution=Ubuntu&amp;amp;target_version=24.04&amp;amp;target_type=deb_local"&gt;CUDA toolking installed&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Linux build tools + Git installed and configured&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Architecture&lt;/h1&gt; &lt;p&gt;Here is a rough overview of the architecture we will be setting up:&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/b7i8qycuqapf1.png?width=2278&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7a13c62c675f024cf7db25006b47caf565515b1d"&gt;https://preview.redd.it/b7i8qycuqapf1.png?width=2278&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=7a13c62c675f024cf7db25006b47caf565515b1d&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Installing and setting up Llamacpp&lt;/h1&gt; &lt;p&gt;LlamaCpp is a very fast and flexible inference engine, it will allow us to run LLMs in GGUF format locally.&lt;/p&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone git@github.com:ggml-org/llama.cpp.git &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;cd into the repo:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd llama.cpp &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;compile llamacpp for CUDA:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cmake -B build -DGGML_CUDA=ON -DBUILD_SHARED_LIBS=OFF -DLLAMA_CURL=ON -DGGML_CUDA_FA_ALL_QUANTS=ON &lt;/code&gt;&lt;/pre&gt; &lt;blockquote&gt; &lt;p&gt;If you have a different GPU, checkout the build guide &lt;a href="https://github.com/ggml-org/llama.cpp/blob/master/docs/build.md"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;pre&gt;&lt;code&gt;cmake --build build --config Release -j --clean-first &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will create llama.cpp binaries in &lt;code&gt;build/bin&lt;/code&gt; folder.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;To update llamacpp to bleeding edge just pull the lastes changes from the master branch with &lt;code&gt;git pull origin master&lt;/code&gt; and run the same commands to recompile&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;Add llamacpp to PATH&lt;/h1&gt; &lt;p&gt;Depending on your shell, add the following to you bashrc or zshrc config file so we can execute llamacpp binaries in the terminal&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export LLAMACPP=[PATH TO CLONED LLAMACPP FOLDER] export PATH=$LLAMACPP/build/bin:$PATH &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Test that everything works correctly:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;llama-server --help &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The output should look like this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/8m2w9yr5rapf1.png?width=902&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=374b0dfcd1b5791a4a6a6e14c76ebd99e526a96b"&gt;https://preview.redd.it/8m2w9yr5rapf1.png?width=902&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=374b0dfcd1b5791a4a6a6e14c76ebd99e526a96b&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Test that inference is working correctly:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;llama-cli -hf ggml-org/gemma-3-1b-it-GGUF &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/4mw5gz28rapf1.png?width=1402&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=51a98932f0b00fd676a1a92c2c75df954d4ed845"&gt;https://preview.redd.it/4mw5gz28rapf1.png?width=1402&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=51a98932f0b00fd676a1a92c2c75df954d4ed845&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Great! now that we can do inference, let move on to setting up llama swap&lt;/p&gt; &lt;h1&gt;Installing and setting up llama swap&lt;/h1&gt; &lt;p&gt;&lt;a href="https://github.com/mostlygeek/llama-swap"&gt;llama-swap&lt;/a&gt; is a light weight, proxy server that provides automatic model swapping to llama.cpp's server. It will automate the model loading and unloading through a special configuration file and provide us with an openai compatible REST API endpoint.&lt;/p&gt; &lt;h1&gt;Download and install&lt;/h1&gt; &lt;p&gt;Download the latest version from the releases page:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/mostlygeek/llama-swap/releases"&gt;https://github.com/mostlygeek/llama-swap/releases&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;(look for &lt;code&gt;llama-swap_159_linux_amd64.tar.gz&lt;/code&gt; )&lt;/p&gt; &lt;p&gt;Unzip the downloaded archive and put the &lt;code&gt;llama-swap&lt;/code&gt; executable somewhere in your home folder (eg: &lt;code&gt;~/llama-swap/bin/llama-swap&lt;/code&gt;)&lt;/p&gt; &lt;p&gt;Add it to your path :&lt;/p&gt; &lt;pre&gt;&lt;code&gt;export PATH=$HOME/llama-swap/bin:$PATH &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;create an empty (for now) config file file in &lt;code&gt;~/llama-swap/config.yaml&lt;/code&gt;&lt;/p&gt; &lt;p&gt;test the executable&lt;/p&gt; &lt;p&gt;&lt;code&gt;llama-swap --help&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/5pb4i3uarapf1.png?width=567&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=44e0c75adc87f071e53c10101f7c2c71f8f80956"&gt;https://preview.redd.it/5pb4i3uarapf1.png?width=567&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=44e0c75adc87f071e53c10101f7c2c71f8f80956&lt;/a&gt;&lt;/p&gt; &lt;p&gt;![Image description](&lt;a href="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl6iqatvejkec03eeaef.png"&gt;https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kl6iqatvejkec03eeaef.png&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;Before setting up llama-swap configuration we first need to download a few GGUF models .&lt;/p&gt; &lt;p&gt;To get started, let's download qwen3-4b and gemma gemma3-4b&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://huggingface.co/ggml-org/Qwen3-4B-GGUF/blob/main/Qwen3-4B-Q8_0.gguf"&gt;https://huggingface.co/ggml-org/Qwen3-4B-GGUF/blob/main/Qwen3-4B-Q8_0.gguf&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://huggingface.co/ggml-org/gemma-3-4b-it-GGUF/blob/main/gemma-3-4b-it-Q8_0.gguf"&gt;https://huggingface.co/ggml-org/gemma-3-4b-it-GGUF/blob/main/gemma-3-4b-it-Q8_0.gguf&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Download and put the GGUF files in the following folder structure&lt;/p&gt; &lt;pre&gt;&lt;code&gt;~/models ├── google │ └── Gemma3-4B │ └── Qwen3-4B-Q8_0.gguf └── qwen └── Qwen3-4B └── gemma-3-4b-it-Q8_0.gguf &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Now that we have some ggufs, let's create a llama-swap config file.&lt;/p&gt; &lt;h1&gt;Llama Swap config file&lt;/h1&gt; &lt;p&gt;Our llama swap config located in &lt;code&gt;~/llama-swap/config.yaml&lt;/code&gt; will look like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;macros: &amp;quot;Qwen3-4b-macro&amp;quot;: &amp;gt; llama-server \ --port ${PORT} \ -ngl 80 \ --ctx-size 8000 \ --temp 0.7 \ --top-p 0.8 \ --top-k 20 \ --min-p 0 \ --repeat-penalty 1.05 \ --no-webui \ --timeout 300 \ --flash-attn on \ --jinja \ --alias Qwen3-4b \ -m /home/[YOUR HOME FOLDER]/models/qwen/Qwen3-4B/Qwen3-4B-Q8_0.gguf &amp;quot;Gemma-3-4b-macro&amp;quot;: &amp;gt; llama-server \ --port ${PORT} \ -ngl 80 \ --top-p 0.95 \ --top-k 64 \ --no-webui \ --timeout 300 \ --flash-attn on \ -m /home/[YOUR HOME FOLDER]/models/google/Gemma3-4B/gemma-3-4b-it-Q8_0.gguf models: &amp;quot;Qwen3-4b&amp;quot;: # &amp;lt;-- this is your model ID when calling the REST API cmd: | ${Qwen3-4b-macro} ttl: 3600 &amp;quot;Gemma3-4b&amp;quot;: cmd: | ${Gemma-3-4b-macro} ttl: 3600 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Start llama-swap&lt;/h1&gt; &lt;p&gt;Now we can start llama-swap with the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;llama-swap --listen 0.0.0.0:8083 --config ~/llama-swap/config.yaml &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can access llama-swap UI at: &lt;a href="http://localhost:8083"&gt;http://localhost:8083&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/mkme3jsdrapf1.png?width=1669&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=841e19ee3a9bba041fa3037f9dd3f46d6a121202"&gt;https://preview.redd.it/mkme3jsdrapf1.png?width=1669&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=841e19ee3a9bba041fa3037f9dd3f46d6a121202&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here you can see all configured models, you can also load or unload them manually.&lt;/p&gt; &lt;h1&gt;Inference&lt;/h1&gt; &lt;p&gt;Let's do some inference via llama-swap REST API completions endpoint&lt;/p&gt; &lt;p&gt;Calling Qwen3:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;curl -X POST http://localhost:8083/v1/chat/completions \ -H &amp;quot;Content-Type: application/json&amp;quot; \ -d '{ &amp;quot;messages&amp;quot;: [ { &amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;hello&amp;quot; } ], &amp;quot;stream&amp;quot;: false, &amp;quot;model&amp;quot;: &amp;quot;Qwen3-4b&amp;quot; }' | jq &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Calling Gemma3:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;curl -X POST http://localhost:8083/v1/chat/completions \ -H &amp;quot;Content-Type: application/json&amp;quot; \ -d '{ &amp;quot;messages&amp;quot;: [ { &amp;quot;role&amp;quot;: &amp;quot;user&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;hello&amp;quot; } ], &amp;quot;stream&amp;quot;: false, &amp;quot;model&amp;quot;: &amp;quot;Gemma3-4b&amp;quot; }' | jq &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see a response from the server that looks something like this, and llamaswap will automatically load the correct model into the memory with each request:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;quot;choices&amp;quot;: [ { &amp;quot;finish_reason&amp;quot;: &amp;quot;stop&amp;quot;, &amp;quot;index&amp;quot;: 0, &amp;quot;message&amp;quot;: { &amp;quot;role&amp;quot;: &amp;quot;assistant&amp;quot;, &amp;quot;content&amp;quot;: &amp;quot;Hello! How can I assist you today? 😊&amp;quot; } } ], &amp;quot;created&amp;quot;: 1757877832, &amp;quot;model&amp;quot;: &amp;quot;Qwen3-4b&amp;quot;, &amp;quot;system_fingerprint&amp;quot;: &amp;quot;b6471-261e6a20&amp;quot;, &amp;quot;object&amp;quot;: &amp;quot;chat.completion&amp;quot;, &amp;quot;usage&amp;quot;: { &amp;quot;completion_tokens&amp;quot;: 12, &amp;quot;prompt_tokens&amp;quot;: 9, &amp;quot;total_tokens&amp;quot;: 21 }, &amp;quot;id&amp;quot;: &amp;quot;chatcmpl-JgolLnFcqEEYmMOu18y8dDgQCEx9PAVl&amp;quot;, &amp;quot;timings&amp;quot;: { &amp;quot;cache_n&amp;quot;: 8, &amp;quot;prompt_n&amp;quot;: 1, &amp;quot;prompt_ms&amp;quot;: 26.072, &amp;quot;prompt_per_token_ms&amp;quot;: 26.072, &amp;quot;prompt_per_second&amp;quot;: 38.35532371893219, &amp;quot;predicted_n&amp;quot;: 12, &amp;quot;predicted_ms&amp;quot;: 80.737, &amp;quot;predicted_per_token_ms&amp;quot;: 6.728083333333333, &amp;quot;predicted_per_second&amp;quot;: 148.63073931406916 } } &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Optional: Adding llamaswap as systemd service and setup auto restart when config file changes&lt;/h1&gt; &lt;p&gt;If you don't want to manually run the llama-swap command everytime you turn on your workstation or manually reload the llama-swap server when you change your config you can leverage systemd to automate that away, create the following files:&lt;/p&gt; &lt;p&gt;Llamaswap service unit (if you are not using zsh adapt the &lt;code&gt;ExecStart&lt;/code&gt; accordingly)&lt;/p&gt; &lt;p&gt;&lt;code&gt;~/.config/systemd/user/llama-swap.service&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[Unit] Description=Llama Swap Server After=multi-user.target [Service] Type=simple ExecStart=/usr/bin/zsh -l -c &amp;quot;source ~/.zshrc &amp;amp;&amp;amp; llama-swap --listen 0.0.0.0:8083 --config ~/llama-swap/config.yaml&amp;quot; WorkingDirectory=%h StandardOutput=journal StandardError=journal Restart=always RestartSec=5 [Install] WantedBy=multi-user.target &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Llamaswap restart service unit&lt;/p&gt; &lt;p&gt;&lt;code&gt;~/.config/systemd/user/llama-swap-restart.service&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[Unit] Description=Restart llama-swap service After=llama-swap.service [Service] Type=oneshot ExecStart=/usr/bin/systemctl --user restart llama-swap.service &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Llamaswap path unit (will allow to monitor changes in the llama-swap config file and call the restart service whenever the changes are detected):&lt;/p&gt; &lt;p&gt;&lt;code&gt;~/.config/systemd/user/llama-swap-config.path&lt;/code&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;[Unit] Description=Monitor llamaswap config file for changes After=multi-user.target [Path] # Monitor the specific file for modifications PathModified=%h/llama-swap/config.yaml Unit=llama-swap-restart.service [Install] WantedBy=default.target &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Enable and start the units:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo systemctl daemon-reload systemctl --user enable llama-swap-restart.service llama-swap.service llama-swap-config.path systemctl --user start llama-swap.service &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Check that the service is running correctly:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;systemctl --user status llama-swap.service &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Monitor llamaswap server logs:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;journalctl --user -u llama-swap.service -f &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Whenever the llama swap config is updated, the llamawap proxy server will automatically restart, you can verify it by monitoring the logs and making an update to the config file.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;If were able to get this far, congrats, you can start downloading and configuring your own models and setting up your own config, you can draw some inspiration from my config available here: &lt;a href="https://gist.github.com/avatsaev/dc302228e6628b3099cbafab80ec8998"&gt;https://gist.github.com/avatsaev/dc302228e6628b3099cbafab80ec8998&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It contains some advanced configurations, like multi-modal inference, parallel inference on the same model, extending context length with flash attention and more&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;Connecting QwenCode to local models&lt;/h1&gt; &lt;p&gt;Install &lt;a href="https://github.com/QwenLM/qwen-code"&gt;QwenCode&lt;/a&gt; And let's use it with &lt;a href="https://huggingface.co/Qwen/Qwen3-Coder-30B-A3B-Instruct"&gt;Qwen3 Coder 30B Instruct&lt;/a&gt; locally (I recommend having at least 24GB of VRAM for this one 😅)&lt;/p&gt; &lt;p&gt;Here is my llama swap config:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;macros: &amp;quot;Qwen3-Coder-30B-A3B-Instruct&amp;quot;: &amp;gt; llama-server \ --api-key qwen \ --port ${PORT} \ -ngl 80 \ --ctx-size 110000 \ --temp 0.7 \ --top-p 0.8 \ --top-k 20 \ --min-p 0 \ --repeat-penalty 1.05 \ --cache-type-k q8_0 \ --cache-type-v q8_0 \ --no-webui \ --timeout 300 \ --flash-attn on \ --alias Qwen3-coder-instruct \ --jinja \ -m ~/models/qwen/Qwen3-Coder-30B-A3B-Instruct-GGUF/Qwen3-Coder-30B-A3B-Instruct-UD-Q4_K_XL.gguf models: &amp;quot;Qwen3-coder&amp;quot;: cmd: | ${Qwen3-Coder-30B-A3B-Instruct} ttl: 3600 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;I'm using &lt;a href="https://docs.unsloth.ai/models/unsloth-dynamic-2.0-ggufs"&gt;Unsloth's Dynamic quants&lt;/a&gt; at Q4 with flash attention and extending the context window to 100k tokens (with --cache-type-k and --cache-type-v flags), this is right at the edge of 24GBs of vram of my RTX3090.&lt;/p&gt; &lt;p&gt;You can download qwen coder ggufs &lt;a href="https://huggingface.co/unsloth/Qwen3-Coder-30B-A3B-Instruct-GGUF/tree/main"&gt;here&lt;/a&gt;&lt;/p&gt; &lt;p&gt;For a test scenario let's create a very simple react app in typescript&lt;/p&gt; &lt;p&gt;Create an empty project folder &lt;code&gt;~/qwen-code-test&lt;/code&gt; Inside this folder create an &lt;code&gt;.env&lt;/code&gt; file with the following contents:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;OPENAI_API_KEY=&amp;quot;qwen&amp;quot; OPENAI_BASE_URL=&amp;quot;http://localhost:8083/v1&amp;quot; OPENAI_MODEL=&amp;quot;Qwen3-coder&amp;quot; &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;cd into the test directory and start qwen code:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cd ~/qwen-code-test qwen &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;make sure that the model is correctly set from your .env file:&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/f5xcdisxqapf1.png?width=1378&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c7071da3aba42ddd38298e1c53be889ef8cef201"&gt;https://preview.redd.it/f5xcdisxqapf1.png?width=1378&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=c7071da3aba42ddd38298e1c53be889ef8cef201&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I've installed &lt;a href="https://marketplace.visualstudio.com/items?itemName=qwenlm.qwen-code-vscode-ide-companion"&gt;Qwen Code Copmanion extenstion&lt;/a&gt; in VS Code for seamless integration with Qwen Code, and here are the results, a fully local coding agent running in VS Code 😁&lt;/p&gt; &lt;p&gt;&lt;a href="https://youtu.be/zucJY57vm1Y"&gt;https://youtu.be/zucJY57vm1Y&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Limp_Classroom_2645"&gt; /u/Limp_Classroom_2645 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhh1v1/engineers_guide_to_local_llms_with_llamacpp_and/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhh1v1/engineers_guide_to_local_llms_with_llamacpp_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhh1v1/engineers_guide_to_local_llms_with_llamacpp_and/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T09:20:37+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhvxo7</id>
    <title>Looking for advice on finetuning an embedding modell</title>
    <updated>2025-09-15T19:43:08+00:00</updated>
    <author>
      <name>/u/CaptainSnackbar</name>
      <uri>https://old.reddit.com/user/CaptainSnackbar</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhvxo7/looking_for_advice_on_finetuning_an_embedding/"&gt; &lt;img alt="Looking for advice on finetuning an embedding modell" src="https://preview.redd.it/imbfqj01tdpf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=41ce23670265bb6c6cab59c2ab8ac854415baae3" title="Looking for advice on finetuning an embedding modell" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/CaptainSnackbar"&gt; /u/CaptainSnackbar &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/imbfqj01tdpf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhvxo7/looking_for_advice_on_finetuning_an_embedding/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhvxo7/looking_for_advice_on_finetuning_an_embedding/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T19:43:08+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni63nf</id>
    <title>Open Line Protocol (MIT): a minimal wire for AI agents (graphs + telemetry, not paragraphs) Useful if you’re wiring tool-using / multi-agent runs and want auditable plans.</title>
    <updated>2025-09-16T02:54:53+00:00</updated>
    <author>
      <name>/u/Both-Ad-5476</name>
      <uri>https://old.reddit.com/user/Both-Ad-5476</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni63nf/open_line_protocol_mit_a_minimal_wire_for_ai/"&gt; &lt;img alt="Open Line Protocol (MIT): a minimal wire for AI agents (graphs + telemetry, not paragraphs) Useful if you’re wiring tool-using / multi-agent runs and want auditable plans." src="https://external-preview.redd.it/WZLRJD8v_fo00CWkxoeoiRlNKlNL-jOXgxTIilkNrFA.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f3e026acd62c629d4995be921015fb7ae72806fa" title="Open Line Protocol (MIT): a minimal wire for AI agents (graphs + telemetry, not paragraphs) Useful if you’re wiring tool-using / multi-agent runs and want auditable plans." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;TL;DR: Open Line lets agents send small graphs + telemetry instead of paragraphs. Frozen wire v0.1, guardrails, and a 5-number “shape” digest (+Δ_hol) so merges are auditable.&lt;/p&gt; &lt;p&gt;Highlights • Typed schema (frozen wire v0.1) • Digest: b0, cycle_plus, x_frontier, s_over_c, depth + Δ_hol • Guards: blocks self-reinforcing loops + silent objection deletion • Receipts: JSON evidence (schema-checked) → shows on a public hub&lt;/p&gt; &lt;p&gt;Hub (latest receipts): &lt;a href="https://terryncew.github.io/openline-hub/"&gt;https://terryncew.github.io/openline-hub/&lt;/a&gt; Ask: Which adapter would you want first (WebSocket, store, LangGraph)?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Both-Ad-5476"&gt; /u/Both-Ad-5476 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/terryncew/openline-core"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni63nf/open_line_protocol_mit_a_minimal_wire_for_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni63nf/open_line_protocol_mit_a_minimal_wire_for_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T02:54:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni3gxa</id>
    <title>SOTA video embedding model?</title>
    <updated>2025-09-16T00:50:55+00:00</updated>
    <author>
      <name>/u/Turbulent-Sky5396</name>
      <uri>https://old.reddit.com/user/Turbulent-Sky5396</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;seems like there is only one viable option (marengo from twelve labs) in this space? anyone know of any other video embedding models available? i want full video embedding ideally (ie. not doing audio embed + image embed)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Turbulent-Sky5396"&gt; /u/Turbulent-Sky5396 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni3gxa/sota_video_embedding_model/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni3gxa/sota_video_embedding_model/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni3gxa/sota_video_embedding_model/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T00:50:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhxlqe</id>
    <title>Is there a newer large corpus of synthetic training data than Cosmopedia v2?</title>
    <updated>2025-09-15T20:44:30+00:00</updated>
    <author>
      <name>/u/ttkciar</name>
      <uri>https://old.reddit.com/user/ttkciar</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I hoard models and datasets, but am usually limited by my crappy rural home DSL. I'm currently taking advantage of a business trip to download my backlog of large models with someone else's fast internet connection (brought an empty 14TB hard drive with me to fill up and take home).&lt;/p&gt; &lt;p&gt;It's only been a day, and I have already downloaded my backlog of large models. Datasets are next. I've queued up a few TB which are downloading now.&lt;/p&gt; &lt;p&gt;I'm particularly interested in high-quality open source synthetic datasets, but already have copies of Cosmopedia and Cosmopedia v2 from &lt;a href="https://huggingface.co/datasets/HuggingFaceTB/smollm-corpus"&gt;https://huggingface.co/datasets/HuggingFaceTB/smollm-corpus&lt;/a&gt; at home, and various smaller datasets.&lt;/p&gt; &lt;p&gt;Cosmopedia v2 is a year old already, and I'm wondering if anyone can suggest a few newer, high quality synthetic corpus I should nab while I still have access to the faster internet.&lt;/p&gt; &lt;p&gt;I'm particularly interested in open source physics-oriented STEM datasets, persuasion skill datasets, and datasets which have undergone multiple rounds of improvement (complexifying / rarifying via Evol-Instruct, Self-Critique, reward model scoring, and similar techniques). Especially if they have associated open source software repositories, papers, and permissible licenses.&lt;/p&gt; &lt;p&gt;If you have suggestions, I'd love to see them!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ttkciar"&gt; /u/ttkciar &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhxlqe/is_there_a_newer_large_corpus_of_synthetic/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhxlqe/is_there_a_newer_large_corpus_of_synthetic/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhxlqe/is_there_a_newer_large_corpus_of_synthetic/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T20:44:30+00:00</published>
  </entry>
  <entry>
    <id>t3_1nh5fn0</id>
    <title>Spent 4 months building Unified Local AI Workspace - ClaraVerse v0.2.0 instead of just dealing with 5+ Local AI Setup like everyone else</title>
    <updated>2025-09-14T22:51:26+00:00</updated>
    <author>
      <name>/u/BadBoy17Ge</name>
      <uri>https://old.reddit.com/user/BadBoy17Ge</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nh5fn0/spent_4_months_building_unified_local_ai/"&gt; &lt;img alt="Spent 4 months building Unified Local AI Workspace - ClaraVerse v0.2.0 instead of just dealing with 5+ Local AI Setup like everyone else" src="https://preview.redd.it/3bgm4ig3i7pf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=06b067861ce9011b554dcf16b3efc513bcd5b061" title="Spent 4 months building Unified Local AI Workspace - ClaraVerse v0.2.0 instead of just dealing with 5+ Local AI Setup like everyone else" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;ClaraVerse v0.2.0 - Unified Local AI Workspace (Chat, Agent, ImageGen, Rag &amp;amp; N8N)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Spent 4 months building ClaraVerse instead of just using multiple AI apps like a normal person&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Posted here in April when it was pretty rough and got some reality checks from the community. Kept me going though - people started posting about it on YouTube and stuff.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The basic idea:&lt;/strong&gt; Everything's just LLMs and diffusion models anyway, so why do we need separate apps for everything? Built ClaraVerse to put it all in one place.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;What's actually working in v0.2.0:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Chat with local models (built-in llama.cpp) or any provider with MCP, Tools, N8N workflow as tools&lt;/li&gt; &lt;li&gt;Generate images with ComfyUI integration&lt;/li&gt; &lt;li&gt;Build agents with visual editor (drag and drop automation)&lt;/li&gt; &lt;li&gt;RAG notebooks with 3D knowledge graphs&lt;/li&gt; &lt;li&gt;N8N workflows for external stuff&lt;/li&gt; &lt;li&gt;Web dev environment (LumaUI)&lt;/li&gt; &lt;li&gt;Community marketplace for sharing workflows&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;The modularity thing:&lt;/strong&gt; Everything connects to everything else. Your chat assistant can trigger image generation, agents can update your knowledge base, workflows can run automatically. It's like LEGO blocks but for AI tools.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Reality check:&lt;/strong&gt; Still has rough edges (it's only 4 months old). But 20k+ downloads and people are building interesting stuff with it, so the core idea seems to work.&lt;/p&gt; &lt;p&gt;Everything runs local, MIT licensed. Built-in llama.cpp with model downloads, manager but works with any provider.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Links:&lt;/strong&gt; GitHub: &lt;a href="http://github.com/badboysm890/ClaraVerse"&gt;github.com/badboysm890/ClaraVerse&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Anyone tried building something similar? Curious if this resonates with other people or if I'm just weird about wanting everything in one app.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/BadBoy17Ge"&gt; /u/BadBoy17Ge &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/3bgm4ig3i7pf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nh5fn0/spent_4_months_building_unified_local_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nh5fn0/spent_4_months_building_unified_local_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-14T22:51:26+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhztu7</id>
    <title>What are the local TTS models with voice cloning?</title>
    <updated>2025-09-15T22:12:28+00:00</updated>
    <author>
      <name>/u/Rique_Belt</name>
      <uri>https://old.reddit.com/user/Rique_Belt</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I've been working on a personal project of mine, and I tried using CoquiTTS and it cloned the Japanese Makima's voice from Chainsaw-man and it is really pleasant to hear, but the problem is that the Coqui Github is not up to date and has a broken tutorial, but somehow DeepSeek got the code and dependencies working for me, I have no idea how. And also its performance is very underwhelming on my CPU so I switched to a lighter model, kokoro, and it's been great but I miss Makima's voice on it. &lt;/p&gt; &lt;p&gt;So, are there others lightweight TTS local models with voice cloning?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Rique_Belt"&gt; /u/Rique_Belt &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhztu7/what_are_the_local_tts_models_with_voice_cloning/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhztu7/what_are_the_local_tts_models_with_voice_cloning/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhztu7/what_are_the_local_tts_models_with_voice_cloning/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T22:12:28+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni591i</id>
    <title>Still just another SOTA? Meta REFRAG: 30× Faster RAG Decoding</title>
    <updated>2025-09-16T02:13:05+00:00</updated>
    <author>
      <name>/u/Cheryl_Apple</name>
      <uri>https://old.reddit.com/user/Cheryl_Apple</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Meta just introduced &lt;strong&gt;REFRAG&lt;/strong&gt;, a new way to handle retrieval-augmented generation. Instead of pushing all retrieved tokens into the decoder, it chops passages into chunks, compresses most into embeddings, and only expands the ones judged important with a lightweight RL policy.&lt;/p&gt; &lt;p&gt;The results sound huge: ~30× faster time-to-first-token, ~16× longer usable contexts, and accuracy basically intact. On benchmarks, it clearly beats older setups like prepend-RAG or CEPE.&lt;/p&gt; &lt;p&gt;But here’s the catch: every few months we see “the new SOTA” in RAG. Each looks great in its own setting, yet in practice different variants trade speed, cost, and accuracy in messy ways. What works for a benchmark may flop on a company’s private data.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Cheryl_Apple"&gt; /u/Cheryl_Apple &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni591i/still_just_another_sota_meta_refrag_30_faster_rag/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni591i/still_just_another_sota_meta_refrag_30_faster_rag/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni591i/still_just_another_sota_meta_refrag_30_faster_rag/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T02:13:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni815f</id>
    <title>Voice Assistant Running on a Raspyberry Pi</title>
    <updated>2025-09-16T04:34:43+00:00</updated>
    <author>
      <name>/u/localslm</name>
      <uri>https://old.reddit.com/user/localslm</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni815f/voice_assistant_running_on_a_raspyberry_pi/"&gt; &lt;img alt="Voice Assistant Running on a Raspyberry Pi" src="https://external-preview.redd.it/Y3RvYW1ibmRnZ3BmMWGGnl44cMWlAhwBPOVxHgzmQ7jmQEBvcqJECv2kUwPF.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=052f93c040b3819082eb24799548218152addf9c" title="Voice Assistant Running on a Raspyberry Pi" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey folks, I just published a write-up on a project I’ve been working on: pi-assistant — a local, open-source voice assistant that runs fully offline on a Raspberry Pi 5.&lt;/p&gt; &lt;p&gt;Blog post: &lt;a href="https://alexfi.dev/blog/raspberry-pi-assistant"&gt;https://alexfi.dev/blog/raspberry-pi-assistant&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Code: &lt;a href="https://github.com/alexander-fischer/pi-assistant"&gt;https://github.com/alexander-fischer/pi-assistant&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What it is&lt;/p&gt; &lt;p&gt;pi-assistant is a modular, tool-calling voice assistant that:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Listens for a wake word (e.g., “Hey Jarvis”)&lt;/li&gt; &lt;li&gt;Transcribes your speech&lt;/li&gt; &lt;li&gt;Uses small LLMs to interpret commands and call tools (weather, Wikipedia, smart home)&lt;/li&gt; &lt;li&gt;Speaks the answer back to you —all without sending data to the cloud.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Tech stack&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Wake word detection: openWakeWord&lt;/li&gt; &lt;li&gt;ASR: nemo-parakeet-tdt-0.6b-v2 / nvidia/canary-180m-flash&lt;/li&gt; &lt;li&gt;Function calling: Arch-Function 1.5B&lt;/li&gt; &lt;li&gt;Answer generation: Gemma3 1B&lt;/li&gt; &lt;li&gt;TTS: Piper&lt;/li&gt; &lt;li&gt;Hardware: Raspberry Pi 5 (16 GB), Jabra Speak 410&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can easily change the language models for a bigger hardware setup.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/localslm"&gt; /u/localslm &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/lh67dy5eggpf1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni815f/voice_assistant_running_on_a_raspyberry_pi/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni815f/voice_assistant_running_on_a_raspyberry_pi/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T04:34:43+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhx3jp</id>
    <title>What’s the most cost-effective and best AI model for coding in your experience?</title>
    <updated>2025-09-15T20:25:39+00:00</updated>
    <author>
      <name>/u/Mammoth-Leopard6549</name>
      <uri>https://old.reddit.com/user/Mammoth-Leopard6549</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone,&lt;br /&gt; I’m curious to hear from developers here: which AI model do you personally find the most cost-effective and reliable for coding tasks?&lt;/p&gt; &lt;p&gt;I know it can depend a lot on use cases (debugging, writing new code, learning, pair programming, etc.), but I’d love to get a sense of what actually works well for you in real projects.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Which model do you use the most?&lt;/li&gt; &lt;li&gt;Do you combine multiple models depending on the task?&lt;/li&gt; &lt;li&gt;If you pay for one, do you feel the price is justified compared to free or open-source options?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think it’d be really helpful to compare experiences across the community, so please share your thoughts!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Mammoth-Leopard6549"&gt; /u/Mammoth-Leopard6549 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhx3jp/whats_the_most_costeffective_and_best_ai_model/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhx3jp/whats_the_most_costeffective_and_best_ai_model/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhx3jp/whats_the_most_costeffective_and_best_ai_model/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T20:25:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni87hl</id>
    <title>Feedback on trimmed-down AI workstation build (based on a16z specs)</title>
    <updated>2025-09-16T04:44:46+00:00</updated>
    <author>
      <name>/u/cuuuuuooooongg</name>
      <uri>https://old.reddit.com/user/cuuuuuooooongg</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’m putting together a local AI workstation build inspired by the &lt;a href="https://a16z.com/building-a16zs-personal-ai-workstation-with-four-nvidia-rtx-6000-pro-blackwell-max-q-gpus/"&gt;a16z setup&lt;/a&gt;. The idea is to stop bleeding money on GCP/AWS for GPU hours and finally have a home rig for quick ideation and prototyping. I’ll mainly be using it to train and finetune custom architectures.&lt;/p&gt; &lt;p&gt;I’ve slimmed down the original spec to make it (slightly) more reasonable while keeping room to expand in the future. I’d love feedback from this community before pulling the trigger.&lt;/p&gt; &lt;p&gt;Here are the main changes vs the reference build:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;4× GPU → 1× GPU (will expand later if needed)&lt;/li&gt; &lt;li&gt;256GB RAM → 128GB RAM&lt;/li&gt; &lt;li&gt;8TB storage → 2TB storage&lt;/li&gt; &lt;li&gt;Sticking with the same PSU for headroom if I add GPUs later&lt;/li&gt; &lt;li&gt;Unsure if the motherboard swap is the right move (original was GIGABYTE MH53-G40, I picked the ASUS Pro WS WRX90E-SAGE SE — any thoughts here?)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Current parts list:&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th align="left"&gt;Category&lt;/th&gt; &lt;th align="left"&gt;Item&lt;/th&gt; &lt;th align="left"&gt;Price&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;GPU&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;NVIDIA RTX PRO 6000 Blackwell Max-Q&lt;/td&gt; &lt;td align="left"&gt;$8,449.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;AMD Ryzen Threadripper PRO 7975WX 32-core 5.3GHz Computer Processor&lt;/td&gt; &lt;td align="left"&gt;$3,400.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Motherboard&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;Pro WS WRX90E-SAGE SE&lt;/td&gt; &lt;td align="left"&gt;$1,299.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;RAM&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;OWC DDR5 4×32GB&lt;/td&gt; &lt;td align="left"&gt;$700.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Storage&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;WD_BLACK 2TB SN8100 NVMe SSD Internal Solid State Drive - Gen 5 PCIe 5.0x4, M.2 2280&lt;/td&gt; &lt;td align="left"&gt;$230.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;PSU&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;Thermaltake Toughpower GF3&lt;/td&gt; &lt;td align="left"&gt;$300.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;CPU Cooler&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;ARCTIC Liquid Freezer III Pro 420 A-RGB – AIO CPU Cooler, 3 × 140 mm Water Cooling, 38 mm Radiator, PWM Pump, VRM Fan, for AMD/Intel sockets&lt;/td&gt; &lt;td align="left"&gt;$115.00&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td align="left"&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;/td&gt; &lt;td align="left"&gt;&lt;strong&gt;$14,493.00&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;Any advice on the component choices or obvious oversights would be super appreciated. Thanks in advance!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/cuuuuuooooongg"&gt; /u/cuuuuuooooongg &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni87hl/feedback_on_trimmeddown_ai_workstation_build/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni87hl/feedback_on_trimmeddown_ai_workstation_build/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni87hl/feedback_on_trimmeddown_ai_workstation_build/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T04:44:46+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhhmu6</id>
    <title>[AutoBE] built full-level backend applications with "qwen3-next-80b-a3b-instruct" model.</title>
    <updated>2025-09-15T09:57:11+00:00</updated>
    <author>
      <name>/u/jhnam88</name>
      <uri>https://old.reddit.com/user/jhnam88</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhhmu6/autobe_built_fulllevel_backend_applications_with/"&gt; &lt;img alt="[AutoBE] built full-level backend applications with &amp;quot;qwen3-next-80b-a3b-instruct&amp;quot; model." src="https://a.thumbs.redditmedia.com/sdfGHCDLTyQ9-yO-fXToFMJUqEorvpfj2vxTYQoMbv0.jpg" title="[AutoBE] built full-level backend applications with &amp;quot;qwen3-next-80b-a3b-instruct&amp;quot; model." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Project&lt;/th&gt; &lt;th&gt;&lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt;&lt;/th&gt; &lt;th&gt;&lt;code&gt;openai/gpt-4.1-mini&lt;/code&gt;&lt;/th&gt; &lt;th&gt;&lt;code&gt;openai/gpt-4.1&lt;/code&gt;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;To Do List&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-todo-qwen-qwen3-next-80b-a3b-instruct"&gt;Qwen3 To Do&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-todo-openai-gpt-4.1-mini"&gt;GPT 4.1-mini To Do&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-todo-openai-gpt-4.1"&gt;GPT 4.1 To Do&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Reddit Community&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-reddit-qwen-qwen3-next-80b-a3b-instruct"&gt;Qwen3 Reddit&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-reddit-openai-gpt-4.1-mini"&gt;GPT 4.1-mini Reddit&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-reddit-openai-gpt-4.1"&gt;GPT 4.1 Reddit&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Economic Discussion&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-bbs-qwen-qwen3-next-80b-a3b-instruct"&gt;Qwen3 BBS&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-bbs-openai-gpt-4.1-mini"&gt;GPT 4.1-mini BBS&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-bbs-openai-gpt-4.1"&gt;GPT 4.1 BBS&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;E-Commerce&lt;/td&gt; &lt;td&gt;Qwen3 Failed&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-shopping-openai-gpt-4.1-mini"&gt;GPT 4.1-mini Shopping&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href="https://github.com/wrtnlabs/autobe-example-shopping-openai-gpt-4.1"&gt;GPT 4.1 Shopping&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;The AutoBE team recently tested the &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; model and successfully generated three full-stack backend applications: To Do List, Reddit Community, and Economic Discussion Board.&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; failed during the &lt;code&gt;realize&lt;/code&gt; phase, but this was due to our compiler development issues rather than the model itself. AutoBE improves backend development success rates by implementing AI-friendly compilers and providing compiler error feedback to AI agents.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;While some compilation errors remained during API logic implementation (realize phase), these were easily fixable manually, so we consider these successful cases. There are still areas for improvement—AutoBE generates relatively few e2e test functions (the Reddit community project only has 9 e2e tests for 60 API operations)—but we expect these issues to be resolved soon.&lt;/p&gt; &lt;p&gt;Compared to &lt;code&gt;openai/gpt-4.1-mini&lt;/code&gt; and &lt;code&gt;openai/gpt-4.1&lt;/code&gt;, the &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; model generates fewer documents, API operations, and DTO schemas. However, in terms of cost efficiency, &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; is significantly more economical than the other models. As AutoBE is an open-source project, we're particularly interested in leveraging open-source models like &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; for better community alignment and accessibility.&lt;/p&gt; &lt;p&gt;For projects that don't require massive backend applications (like our e-commerce test case), &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; is an excellent choice for building full-stack backend applications with AutoBE.&lt;/p&gt; &lt;p&gt;We AutoBE team are actively working on fine-tuning our approach to achieve 100% success rate with &lt;code&gt;qwen3-next-80b-a3b-instruct&lt;/code&gt; in the near future. We envision a future where backend application prototype development becomes fully automated and accessible to everyone through AI. Please stay tuned for what's coming next!&lt;/p&gt; &lt;h2&gt;Links&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;AutoBE GitHub Repository:&lt;/strong&gt; &lt;a href="https://github.com/wrtnlabs/autobe"&gt;https://github.com/wrtnlabs/autobe&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://autobe.dev/docs"&gt;https://autobe.dev/docs&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jhnam88"&gt; /u/jhnam88 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1nhhmu6"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhhmu6/autobe_built_fulllevel_backend_applications_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhhmu6/autobe_built_fulllevel_backend_applications_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T09:57:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhqm7n</id>
    <title>Qwen2.5-VL 7B: Why is Hugging Face Inference more accurate/faster than my local run?</title>
    <updated>2025-09-15T16:28:41+00:00</updated>
    <author>
      <name>/u/Ok_Television_9000</name>
      <uri>https://old.reddit.com/user/Ok_Television_9000</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve been experimenting with &lt;strong&gt;Qwen2.5-VL 7B&lt;/strong&gt; for image-based data extraction (e.g. receipts).&lt;br /&gt; When I run it on the &lt;a href="https://huggingface.co/Qwen/Qwen2.5-VL-7B-Instruct"&gt;Hugging Face Inference provider&lt;/a&gt;, the results are &lt;strong&gt;highly accurate and quite fast&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;But when I run the same model locally (16 GB VRAM, Q8 quantization, &lt;code&gt;max_new_tokens=512&lt;/code&gt;), the output is noticeably &lt;strong&gt;less accurate&lt;/strong&gt; (wrong digits/letters, small hallucinations) and much &lt;strong&gt;slower&lt;/strong&gt; (~3 tok/s despite FlashAttention 2 enabled)&lt;/p&gt; &lt;p&gt;I assume HF is running this on stronger GPUs behind the scenes, but I’m curious if there’s more to it:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Do they wrap Qwen-VL with &lt;strong&gt;extra preprocessing/decoding constraints&lt;/strong&gt; (image normalization, capped &lt;code&gt;max_new_tokens&lt;/code&gt;, schema prompts, etc.)?&lt;/li&gt; &lt;li&gt;Or is the gap mainly my local setup (Q8 + large token budget), versus HF’s serving stack optimizations (fp16/bf16 tuning, TensorRT, fused kernels)?&lt;/li&gt; &lt;li&gt;Any practical tips for &lt;strong&gt;closing the accuracy/speed gap&lt;/strong&gt; locally?&lt;/li&gt; &lt;li&gt;Is it normal to not be able to fit FP32 of Qwen2.5-VL 7B into 16GB VRAM?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Would love to hear from anyone who’s profiled or replicated these differences.&lt;/p&gt; &lt;p&gt;Edit: * Weights: INT8 (BitsAndBytesConfig(load_in_8bit=True)) * Compute &amp;amp; activations: FP16 (dtype=torch.float16). * I quantized to these values because without it, it kept getting offloaded to CPU. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Ok_Television_9000"&gt; /u/Ok_Television_9000 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhqm7n/qwen25vl_7b_why_is_hugging_face_inference_more/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhqm7n/qwen25vl_7b_why_is_hugging_face_inference_more/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhqm7n/qwen25vl_7b_why_is_hugging_face_inference_more/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T16:28:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhpy35</id>
    <title>A lightweight and tunable python chat interface to interact with LLM, featuring persistent memory</title>
    <updated>2025-09-15T16:03:39+00:00</updated>
    <author>
      <name>/u/Vicouille6</name>
      <uri>https://old.reddit.com/user/Vicouille6</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhpy35/a_lightweight_and_tunable_python_chat_interface/"&gt; &lt;img alt="A lightweight and tunable python chat interface to interact with LLM, featuring persistent memory" src="https://preview.redd.it/olzso2n2qcpf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=b502586d78f6bcec10593dca6d7a69c2f9f80094" title="A lightweight and tunable python chat interface to interact with LLM, featuring persistent memory" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I developed a lightweight Python tool that allows local LLM to maintain persistent memory, and I’m sharing it here.&lt;/p&gt; &lt;p&gt;Local models are great for privacy and offline use, but they typically lose all context between sessions unlike online services, as you all know.&lt;/p&gt; &lt;p&gt;Previously, I built a project that captured conversations from LM Studio and stored them in a database to enrich prompts sent to models. This new version is a direct chat interface (leveraging easy-llama by u/master-meal-77, many thanks to him) that makes the memory process completely seamless and invisible to the user.&lt;/p&gt; &lt;h1&gt;Key features:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Fully local, no external API dependencies &lt;/li&gt; &lt;li&gt;Short-term and long-term memory for fluid conversations and contextually relevant responses -&lt;/li&gt; &lt;li&gt;Fully customizable depth of memory and model parameters &lt;/li&gt; &lt;li&gt;Workspaces to separate different projects &lt;/li&gt; &lt;li&gt;Built-in visualizations to track memory data and semantic indicators&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Upcoming developments:&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Document support (PDF, Word, Excel, images) for targeted queries &lt;/li&gt; &lt;li&gt;Integrated web search to supplement local memory with the most recent information &lt;/li&gt; &lt;li&gt;Selective import/export of personal memory through workspaces for sharing within a team&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think this project could be of interest to some users of this sub.&lt;/p&gt; &lt;p&gt;The code is here : &lt;a href="https://github.com/victorcarre6/LocalMind"&gt;GitHub repository&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Feel free to use it as you want and to share your feedback! :)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Vicouille6"&gt; /u/Vicouille6 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/olzso2n2qcpf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhpy35/a_lightweight_and_tunable_python_chat_interface/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhpy35/a_lightweight_and_tunable_python_chat_interface/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T16:03:39+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhdi2u</id>
    <title>Update: we got our revenge and now beat Deepmind, Microsoft, Zhipu AI and Alibaba</title>
    <updated>2025-09-15T05:32:12+00:00</updated>
    <author>
      <name>/u/Connect-Employ-4708</name>
      <uri>https://old.reddit.com/user/Connect-Employ-4708</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Three weeks ago we open-sourced our agent that uses mobile apps like a human. At that moment, we were #2 on AndroidWorld (behind Zhipu AI).&lt;/p&gt; &lt;p&gt;Since, we worked hard and improved the performance of our agent: &lt;strong&gt;we’re now officially #1&lt;/strong&gt; on the &lt;a href="https://docs.google.com/spreadsheets/d/1cchzP9dlTZ3WXQTfYNhh3avxoLipqHN75v1Tb86uhHo/edit?pli=1&amp;amp;gid=0#gid=0"&gt;AndroidWorld leaderboard&lt;/a&gt;, surpassing Deepmind, Microsoft Research, Zhipu AI and Alibaba.&lt;/p&gt; &lt;p&gt;It handles mobile tasks: booking rides, ordering food, navigating apps, just like a human would. Still working on improvements and building an RL gym for fine-tuning :)&lt;/p&gt; &lt;p&gt;The agent is completely open-source: &lt;a href="http://github.com/minitap-ai/mobile-use"&gt;github.com/minitap-ai/mobile-use&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What mobile tasks would you want an AI agent to handle for you? Always looking for feedback and contributors!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Connect-Employ-4708"&gt; /u/Connect-Employ-4708 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhdi2u/update_we_got_our_revenge_and_now_beat_deepmind/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhdi2u/update_we_got_our_revenge_and_now_beat_deepmind/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhdi2u/update_we_got_our_revenge_and_now_beat_deepmind/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T05:32:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni1uw3</id>
    <title>Anyone else have small models just "forget" MCP tools exist?</title>
    <updated>2025-09-15T23:37:53+00:00</updated>
    <author>
      <name>/u/TheLostWanderer47</name>
      <uri>https://old.reddit.com/user/TheLostWanderer47</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Trying to stitch together a lightweight &amp;quot;local research assistant&amp;quot; setup with MCP, but running into weird behavior:&lt;/p&gt; &lt;p&gt;Stack:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://github.com/brightdata/brightdata-mcp"&gt;Bright Data MCP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/CherryHQ/cherry-studio"&gt;Cherry Studio&lt;/a&gt; built-in knowledge graph MCP&lt;/li&gt; &lt;li&gt;Ollama connected w/ Qwen3-4B-Instruct-2507 as the model&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Most of the time, Qwen doesn’t even seem to know that the MCP tools are there. Paraphrasing the problem here:&lt;/p&gt; &lt;p&gt;Me: &amp;quot;Fetch this URL, then summarize it in 3 bullets, and finally, store it in the knowledge graph with observations.&amp;quot;&lt;br /&gt; Qwen: &amp;quot;Sorry, I don't have any tools that can browse the internet to fetch the contents of that page for you.&amp;quot;&lt;/p&gt; &lt;p&gt;…but maybe 1 out of 3 tries, it does call the Bright Data MCP and returns clean markdown???&lt;/p&gt; &lt;p&gt;Same with Cherry’s knowledge graph. sometimes it builds links between entities, sometimes the model acts like the tool was never registered.&lt;/p&gt; &lt;p&gt;I've tried explicitly reminding the model, &amp;quot;you have these tools available,&amp;quot; but it doesn't stick.&lt;/p&gt; &lt;p&gt;Have I messed up the config somewhere? Has anyone else run into this &amp;quot;tool amnesia&amp;quot; issue with Cherry studio or MCP servers?&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TheLostWanderer47"&gt; /u/TheLostWanderer47 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni1uw3/anyone_else_have_small_models_just_forget_mcp/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni1uw3/anyone_else_have_small_models_just_forget_mcp/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni1uw3/anyone_else_have_small_models_just_forget_mcp/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T23:37:53+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhv42c</id>
    <title>NCSOFT/VARCO-VISION-2.0-14B · Hugging Face</title>
    <updated>2025-09-15T19:12:50+00:00</updated>
    <author>
      <name>/u/ninjasaid13</name>
      <uri>https://old.reddit.com/user/ninjasaid13</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhv42c/ncsoftvarcovision2014b_hugging_face/"&gt; &lt;img alt="NCSOFT/VARCO-VISION-2.0-14B · Hugging Face" src="https://external-preview.redd.it/Zqwx3E1Z_EElc-Wqav8y07fmTzCY9Mbf2KZGmL-cSJg.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=8273519f7df58dceaae1c21bddf409931659286d" title="NCSOFT/VARCO-VISION-2.0-14B · Hugging Face" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Abstract&lt;/p&gt; &lt;p&gt;&lt;strong&gt;VARCO-VISION-2.0&lt;/strong&gt; is a multimodal AI model capable of understanding both images and text to answer user queries. It supports multi-image inputs, enabling effective processing of complex content such as documents, tables, and charts. The model demonstrates strong comprehension in both Korean and English, with significantly improved text generation capabilities and a deeper understanding of Korean cultural context. Compared to its predecessor, performance has been notably enhanced across various benchmarks, and its usability in real-world scenarios—such as everyday Q&amp;amp;A and information summarization—has also improved.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ninjasaid13"&gt; /u/ninjasaid13 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/NCSOFT/VARCO-VISION-2.0-14B"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhv42c/ncsoftvarcovision2014b_hugging_face/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhv42c/ncsoftvarcovision2014b_hugging_face/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T19:12:50+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni2vqw</id>
    <title>Single Install for GGUF Across CPU/GPU/NPU - Goodbye Multiple Builds</title>
    <updated>2025-09-16T00:24:25+00:00</updated>
    <author>
      <name>/u/Different-Effect-724</name>
      <uri>https://old.reddit.com/user/Different-Effect-724</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2vqw/single_install_for_gguf_across_cpugpunpu_goodbye/"&gt; &lt;img alt="Single Install for GGUF Across CPU/GPU/NPU - Goodbye Multiple Builds" src="https://external-preview.redd.it/CVSxdiqWqp-ZrX8yVw3cfjqBie1BbHNW--0BWHDVzxg.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=856312cd81fead7db026713fa8f52842ec93752d" title="Single Install for GGUF Across CPU/GPU/NPU - Goodbye Multiple Builds" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;&lt;br /&gt; AI developers need flexibility and simplicity when running and developing with local models, yet popular on-device runtimes such as llama.cpp and Ollama still often fall short:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Separate installers for CPU, GPU, and NPU&lt;/li&gt; &lt;li&gt;Conflicting APIs and function signatures&lt;/li&gt; &lt;li&gt;NPU-optimized formats are limited&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For anyone building on-device LLM apps, these hurdles slow development and fragment the stack.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;To solve this:&lt;/strong&gt;&lt;br /&gt; I upgraded Nexa SDK so that it supports:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;One core API for LLM/VLM/embedding/ASR&lt;/li&gt; &lt;li&gt;Backend plugins for CPU, GPU, and NPU that load only when needed&lt;/li&gt; &lt;li&gt;Automatic registry to pick the best accelerator at runtime&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a href="https://reddit.com/link/1ni2vqw/video/uucn4t7p6fpf1/player"&gt;https://reddit.com/link/1ni2vqw/video/uucn4t7p6fpf1/player&lt;/a&gt;&lt;/p&gt; &lt;p&gt;On an HP OmniBook with Snapdragon Elite X, I ran the same LLaMA-3.2-3B GGUF model and achieved:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;On CPU: 17 tok/s&lt;/li&gt; &lt;li&gt;On GPU: 10 tok/s&lt;/li&gt; &lt;li&gt;On NPU (Turbo engine): 29 tok/s&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I didn’t need to switch backends or make any extra code changes; everything worked with the same SDK.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;You Can Achieve&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ship a single build that scales from laptops to edge devices&lt;/li&gt; &lt;li&gt;Mix GGUF and vendor-optimized formats without rewriting code&lt;/li&gt; &lt;li&gt;Cut cold-start times to milliseconds while keeping the package size small&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Download one installer, choose your model, and deploy across CPU, GPU, and NPU—without changing a single line of code, so AI developers can focus on the actual products instead of wrestling with hardware differences. &lt;/p&gt; &lt;p&gt;Try it today and leave a star if you find it helpful: &lt;a href="https://github.com/NexaAI/nexa-sdk"&gt;GitHub repo&lt;/a&gt;&lt;br /&gt; Please let me know any feedback or thoughts. I look forward to keeping updating this project based on requests.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Different-Effect-724"&gt; /u/Different-Effect-724 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2vqw/single_install_for_gguf_across_cpugpunpu_goodbye/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2vqw/single_install_for_gguf_across_cpugpunpu_goodbye/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2vqw/single_install_for_gguf_across_cpugpunpu_goodbye/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T00:24:25+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhn5sy</id>
    <title>Testers w/ 4th-6th Generation Xeon CPUs wanted to test changes to llama.cpp</title>
    <updated>2025-09-15T14:19:58+00:00</updated>
    <author>
      <name>/u/DataGOGO</name>
      <uri>https://old.reddit.com/user/DataGOGO</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey all,.&lt;/p&gt; &lt;p&gt;I have been working on improving AMX acceleration in llama.cpp. Currently, even if you have a a supported CPU and have built llama.cpp with all the required build flags, AMX acceleration is disabled if you have a GPU present.&lt;/p&gt; &lt;p&gt;I modified the way that llama.cpp exposes the &amp;quot;extra&amp;quot; CPU buffers so that AMX will remain functional in CPU/GPU hybrids, resulting in a 20-40% increase in performance for CPU offloaded layers / CPU offloaded experts.&lt;/p&gt; &lt;p&gt;Since I have limited hardware to test with I made a temporary fork and I am looking for testers make sure everything is good before I open a PR to roll the changes into mainline llama.cpp.&lt;/p&gt; &lt;p&gt;4th-6th Generation Xeons accelerations supported in hybrid: AVX-512VNNI, AMXInt8, AMXBF16&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note: I have made the changes to AMX.cpp to implement AMXInt4, but since I don't have a 6th generation Xeon, I can't test it, so I left it out for now.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;To enable the new behavior you just place &amp;quot;--amx&amp;quot; in your launch command string, to revert to base behavior, just remove the &amp;quot;--amx&amp;quot; flag.&lt;/p&gt; &lt;p&gt;If you test please leave a comment in the discussions in the Github with your CPU/RAM/GPU hardware information and your results with and without the &amp;quot;--amx&amp;quot; flag using the example llama-bench and llama-cli commands (takes less that 1 min each) it would be very helpful. Feel free to include any other tests that you do, the more the better.&lt;/p&gt; &lt;p&gt;Huge thank you in advance!&lt;/p&gt; &lt;p&gt;Here is the github: Instructions and example commands are in the readme.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/Gadflyii/llama.cpp"&gt;https://github.com/Gadflyii/llama.cpp&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/DataGOGO"&gt; /u/DataGOGO &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhn5sy/testers_w_4th6th_generation_xeon_cpus_wanted_to/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhn5sy/testers_w_4th6th_generation_xeon_cpus_wanted_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhn5sy/testers_w_4th6th_generation_xeon_cpus_wanted_to/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T14:19:58+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhd5ks</id>
    <title>Completed 8xAMD MI50 - 256GB VRAM + 256GB RAM rig for $3k</title>
    <updated>2025-09-15T05:11:27+00:00</updated>
    <author>
      <name>/u/MLDataScientist</name>
      <uri>https://old.reddit.com/user/MLDataScientist</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhd5ks/completed_8xamd_mi50_256gb_vram_256gb_ram_rig_for/"&gt; &lt;img alt="Completed 8xAMD MI50 - 256GB VRAM + 256GB RAM rig for $3k" src="https://b.thumbs.redditmedia.com/fnXtmv3xMQuxl9xhdyUEPfnB7lkOh7QN0YQdqGLHvKc.jpg" title="Completed 8xAMD MI50 - 256GB VRAM + 256GB RAM rig for $3k" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello everyone,&lt;/p&gt; &lt;p&gt;A few months ago I posted about how I was able to purchase 4xMI50 for $600 and run them using my consumer PC. Each GPU could run at PCIE3.0 x4 speed and my consumer PC did not have enough PCIE lanes to support more than 6x GPUs. My final goal was to run all 8 GPUs at proper PCIE4.0 x16 speed. &lt;/p&gt; &lt;p&gt;I was finally able to complete my setup. Cost breakdown:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;ASRock ROMED8-2T Motherboard with 8x32GB DDR4 3200Mhz and AMD Epyc 7532 CPU (32 cores), dynatron 2U heatsink - $1000&lt;/li&gt; &lt;li&gt;6xMI50 and 2xMI60 - $1500&lt;/li&gt; &lt;li&gt;10x blower fans (all for $60), 1300W PSU ($120) + 850W PSU (already had this), 6x 300mm riser cables (all for $150), 3xPCIE 16x to 8x8x bifurcation cards (all for $70), 8x PCIE power cables and fan power controller (for $100)&lt;/li&gt; &lt;li&gt;GTX 1650 4GB for video output (already had this)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In total, I spent around ~$3k for this rig. All used parts.&lt;/p&gt; &lt;p&gt;ASRock ROMED8-2T was an ideal motherboard for me due to its seven x16 full physical PCIE4.0 slots.&lt;/p&gt; &lt;p&gt;Attached photos below.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/b052o7hi99pf1.jpg?width=4080&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=20fb34bd86438c2a2111fb0eb52a70b26b3b9685"&gt;8xMI50/60 32GB with GTX 1650 top view&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/cnnr3ixn99pf1.jpg?width=4080&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=273be5463afc2508a46f17ea5e63b6e6de51b5fb"&gt;8xMI50/60 32GB in open frame rack with motherboard and PSU. My consumer PC is on the right side (not used here)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;I have not done many LLM tests yet. PCIE4.0 connection was not stable since I am using longer PCIE risers. So, I kept the speed for each PCIE slot at 3.0 x16. Some initial performance metrics are below. Installed Ubuntu 24.04.3 with ROCm 6.4.3 (needed to copy paste gfx906 tensiles to fix deprecated support).&lt;/p&gt; &lt;ul&gt; &lt;li&gt;CPU alone: gpt-oss 120B (65GB Q8) runs at ~25t/s with ~120t/s prompt processing (llama.cpp)&lt;/li&gt; &lt;li&gt;2xMI50: gpt-oss 120B (65GB Q8) runs at ~58t/s with 750t/s prompt processing (llama.cpp)&lt;/li&gt; &lt;li&gt;8xMI50: qwen3 235B Q4_1 runs at ~21t/s with 350t/s prompt processing (llama.cpp)&lt;/li&gt; &lt;li&gt;2xMI60 vllm gfx906: llama3.3 70B AWQ: 25t/s with ~240 t/s prompt processing&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Idle power consumption is around ~400W (20w for each GPU, 15w for each blower fan, ~100W for motherboard, RAM, fan and CPU). llama.cpp inference averages around 750W (using wall meter). For a few seconds during inference, the power spikes up to 1100W&lt;/p&gt; &lt;p&gt;I will do some more performance tests. Overall, I am happy with what I was able to build and run. &lt;/p&gt; &lt;p&gt;Fun fact: the entire rig costs around the same price as a single RTX 5090 (variants like ASUS TUF).&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/MLDataScientist"&gt; /u/MLDataScientist &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhd5ks/completed_8xamd_mi50_256gb_vram_256gb_ram_rig_for/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhd5ks/completed_8xamd_mi50_256gb_vram_256gb_ram_rig_for/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhd5ks/completed_8xamd_mi50_256gb_vram_256gb_ram_rig_for/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T05:11:27+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni5tq3</id>
    <title>AMD Max+ 395 with a 7900xtx as a little helper.</title>
    <updated>2025-09-16T02:41:02+00:00</updated>
    <author>
      <name>/u/fallingdowndizzyvr</name>
      <uri>https://old.reddit.com/user/fallingdowndizzyvr</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I finally got around to hooking up my 7900xtx to my GMK X2. A while back some people were interested in numbers for this so here are some numbers for OSS 120B. The big win is that adding the 7900xtx didn't make it slower and in fact made everything a little faster. My experience going multi-gpu is that there is a speed penalty. In this case adding the 7900xtx is effectively like just having another 24GB added to the 128GB.&lt;/p&gt; &lt;p&gt;I'll start with a baseline run in Vulkan on just the Max+ 395.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ggml_vulkan: 0 = AMD Radeon Graphics (RADV GFX1151) (radv) | uma: 1 | fp16: 1 | bf16: 0 | warp size: 64 | shared memory: 65536 | int dot: 1 | matrix cores: KHR_coopmat | model | size | params | backend | ngl | fa | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | -: | ---: | --------------: | -------------------: | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 0 | pp512 | 473.93 ± 3.64 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 0 | tg128 | 51.49 ± 0.03 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 0 | pp512 @ d20000 | 261.49 ± 0.58 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 0 | tg128 @ d20000 | 41.03 ± 0.01 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here's a run in Vulkan split between the Max+ and the 7900xtx.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ggml_vulkan: Found 2 Vulkan devices: ggml_vulkan: 0 = Radeon RX 7900 XTX (RADV NAVI31) (radv) | uma: 0 | fp16: 1 | bf16: 0 | warp size: 64 | shared memory: 65536 | int dot: 1 | matrix cores: KHR_coopmat ggml_vulkan: 1 = AMD Radeon Graphics (RADV GFX1151) (radv) | uma: 1 | fp16: 1 | bf16: 0 | warp size: 64 | shared memory: 65536 | int dot: 1 | matrix cores: KHR_coopmat | model | size | params | backend | ngl | fa | ts | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | -: | ------------ | ---: | --------------: | -------------------: | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 36.00/64.00 | 0 | pp512 | 615.07 ± 3.11 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 36.00/64.00 | 0 | tg128 | 53.08 ± 0.31 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 36.00/64.00 | 0 | pp512 @ d20000 | 343.58 ± 5.11 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | Vulkan,RPC | 9999 | 1 | 36.00/64.00 | 0 | tg128 @ d20000 | 40.53 ± 0.13 | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And lastly, here's a split ROCm run for comparison. Vulkan is still king. Particularly as the context grows.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;ggml_cuda_init: found 2 ROCm devices: Device 0: Radeon RX 7900 XTX, gfx1100 (0x1100), VMM: no, Wave Size: 32 Device 1: AMD Radeon Graphics, gfx1151 (0x1151), VMM: no, Wave Size: 32 | model | size | params | backend | ngl | main_gpu | fa | ts | mmap | test | t/s | | ------------------------------ | ---------: | ---------: | ---------- | --: | ---------: | -: | ------------ | ---: | --------------: | -------------------: | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | ROCm,RPC | 9999 | 1 | 1 | 36.00/64.00 | 0 | pp512 | 566.14 ± 4.61 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | ROCm,RPC | 9999 | 1 | 1 | 36.00/64.00 | 0 | tg128 | 46.88 ± 0.15 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | ROCm,RPC | 9999 | 1 | 1 | 36.00/64.00 | 0 | pp512 @ d20000 | 397.01 ± 0.99 | | gpt-oss 120B MXFP4 MoE | 59.02 GiB | 116.83 B | ROCm,RPC | 9999 | 1 | 1 | 36.00/64.00 | 0 | tg128 @ d20000 | 18.09 ± 0.06 | &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/fallingdowndizzyvr"&gt; /u/fallingdowndizzyvr &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5tq3/amd_max_395_with_a_7900xtx_as_a_little_helper/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5tq3/amd_max_395_with_a_7900xtx_as_a_little_helper/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5tq3/amd_max_395_with_a_7900xtx_as_a_little_helper/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T02:41:02+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhz4dn</id>
    <title>Qwen-next - no gguf yet</title>
    <updated>2025-09-15T21:44:23+00:00</updated>
    <author>
      <name>/u/mgr2019x</name>
      <uri>https://old.reddit.com/user/mgr2019x</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;does anyone know why llama.cpp has not implemented the new architecture yet?&lt;/p&gt; &lt;p&gt;I am not complaining, i am just wondering what the reason(s) might be. The feature request on github seems quite stuck to me.&lt;/p&gt; &lt;p&gt;Sadly there is no skill on my side, so i am not able to help.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mgr2019x"&gt; /u/mgr2019x &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhz4dn/qwennext_no_gguf_yet/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhz4dn/qwennext_no_gguf_yet/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhz4dn/qwennext_no_gguf_yet/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T21:44:23+00:00</published>
  </entry>
  <entry>
    <id>t3_1nhtv5f</id>
    <title>Some GPU (5090,4090,3090,A600) idle power consumption, headless on Linux (Fedora 42), and some undervolt/overclock info.</title>
    <updated>2025-09-15T18:27:22+00:00</updated>
    <author>
      <name>/u/panchovix</name>
      <uri>https://old.reddit.com/user/panchovix</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhtv5f/some_gpu_509040903090a600_idle_power_consumption/"&gt; &lt;img alt="Some GPU (5090,4090,3090,A600) idle power consumption, headless on Linux (Fedora 42), and some undervolt/overclock info." src="https://preview.redd.it/5difgej3fdpf1.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=f699faed3067a46c354771c3653e38f77a492e56" title="Some GPU (5090,4090,3090,A600) idle power consumption, headless on Linux (Fedora 42), and some undervolt/overclock info." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Just an small post about some power consumption of those some GPUs if some people are interested.&lt;/p&gt; &lt;p&gt;As extra info, all the cards are both undervolted + power limited, but it shouldn't affect idle power consumption.&lt;/p&gt; &lt;p&gt;Undervolt was done with LACT, and they are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;3090s: 1875Mhz max core clock, +150Mhz core clock offset, +1700Mhz VRAM offset.&lt;/li&gt; &lt;li&gt;A6000: 1740Mhz max core clock, +150Mhz core clock offset, +2000 Mhz VRAM offset.&lt;/li&gt; &lt;li&gt;4090 (1): 2850Mhz max core clock, +150Mhz core clock offset, +2700Mhz VRAM.&lt;/li&gt; &lt;li&gt;4090 (2): 2805Mhz max core clock, +180Mhz core clock offset, +1700Mhz VRAM offset.&lt;/li&gt; &lt;li&gt;5090s: 3010Mhz max core clock, +1000Mhz core clock offset, +4400Mhz VRAM offset.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If someone wants to know how to use LACT just let me know, but I basically use SDDM (sudo systemctl start sddm), LACT for the GUI, set the values and then run&lt;/p&gt; &lt;p&gt;sudo a (it does nothing, but helps for the next command)&lt;br /&gt; (echo suspend | sudo tee /proc/driver/nvidia/suspend ;echo resume | sudo tee /proc/driver/nvidia/suspend)&amp;amp;&lt;/p&gt; &lt;p&gt;Then run sudo systemctl stop sddm.&lt;/p&gt; &lt;p&gt;This mostly puts the 3090s, A6000 and 4090 (2) at 0.9V. 4090 (1) is at 0.915V, and 5090s are at 0.895V.&lt;/p&gt; &lt;p&gt;Also this offset in VRAM is MT/s basically, so on Windows comparatively, it is half of that (+1700Mhz = +850Mhz on MSI Afterburner, +1800 = +900, +2700 = 1350, +4400 = +2200)&lt;/p&gt; &lt;p&gt;EDIT: Just as an info, maybe (not) surprisingly, the GPUs that idle at the lower power are the most efficient.&lt;/p&gt; &lt;p&gt;I.e. 5090 2 is more efficient than 5090 0, or 4090 6 is more efficient than 4090 1.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/panchovix"&gt; /u/panchovix &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/5difgej3fdpf1.png"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1nhtv5f/some_gpu_509040903090a600_idle_power_consumption/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1nhtv5f/some_gpu_509040903090a600_idle_power_consumption/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T18:27:22+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni5bao</id>
    <title>Fully local data analysis assistant (plus new Model)</title>
    <updated>2025-09-16T02:16:04+00:00</updated>
    <author>
      <name>/u/mshintaro777</name>
      <uri>https://old.reddit.com/user/mshintaro777</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5bao/fully_local_data_analysis_assistant_plus_new_model/"&gt; &lt;img alt="Fully local data analysis assistant (plus new Model)" src="https://preview.redd.it/ifula3tiqfpf1.gif?width=640&amp;amp;crop=smart&amp;amp;s=e334cd9bdf8f0d006bb34767d9f02bebb39206c1" title="Fully local data analysis assistant (plus new Model)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi community! Today I’m releasing an open-source, fully local data analysis assistant along with a lightweight LLM trained for it, called &lt;a href="https://quelmap.com"&gt;&lt;strong&gt;quelmap&lt;/strong&gt;&lt;/a&gt; and &lt;strong&gt;Lightning-4b&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;LLMs are amazing, but handing over all your data to a major LLM provider isn’t how it should be. Nowadays, data analysis has relied on huge context windows and very large models. Instead, we tried to see if we could cover most common analysis tasks with an efficient XML-based output format and GRPO training.&lt;/p&gt; &lt;p&gt;It even works smoothly on my &lt;strong&gt;M4 MacBook Air (16GB)&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Basic Features&lt;/strong&gt;&lt;br /&gt; 📊 Data visualization&lt;br /&gt; 🚀 Table joins&lt;br /&gt; 📈 Run statistical tests&lt;br /&gt; 📂 Unlimited rows, analyze 30+ tables at once&lt;br /&gt; 🐍 Built-in Python sandbox&lt;br /&gt; 🦙 Ollama or LM Studio API integration&lt;/p&gt; &lt;p&gt;Lightning-4b is trained specifically for quelmap, and it’s been accurate and stable in generating structured outputs and Python code—more consistent than gpt-oss-120b or even Qwen3-235B in simple analysis tasks on quelmap. You can check the training details and performance here:&lt;br /&gt; 👉 &lt;a href="https://www.quelmap.com/lightning-4b/"&gt;https://www.quelmap.com/lightning-4b/&lt;/a&gt;&lt;/p&gt; &lt;p&gt;It’s not meant for writing complex research reports or high-level business advice like Gemini-DeepResearch. But I hope it can be a helpful tool for privacy-conscious analysts and beginners who just want to explore or analyze their data safely.&lt;/p&gt; &lt;p&gt;All details, installation instructions, and source code are here:&lt;br /&gt; 🔗 Github: &lt;a href="https://github.com/quelmap-inc/quelmap"&gt;https://github.com/quelmap-inc/quelmap&lt;/a&gt;&lt;br /&gt; 🔗 HuggingFace: &lt;a href="https://huggingface.co/quelmap/Lightning-4b"&gt;https://huggingface.co/quelmap/Lightning-4b&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If people find this useful, I’d love to keep working on this project (agent mode, new models and more). Let me know what you think—I’d love to hear it.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mshintaro777"&gt; /u/mshintaro777 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/ifula3tiqfpf1.gif"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5bao/fully_local_data_analysis_assistant_plus_new_model/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni5bao/fully_local_data_analysis_assistant_plus_new_model/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-16T02:16:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1ni2chb</id>
    <title>Qwen3-Next 80b MLX (Mac) runs on latest LM Studio</title>
    <updated>2025-09-15T23:59:55+00:00</updated>
    <author>
      <name>/u/jarec707</name>
      <uri>https://old.reddit.com/user/jarec707</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Was excited to see this work. About 35 tps on my M1 Mac Studio 64 gb. Takes about 42 gb. Edit: &lt;a href="https://huggingface.co/mlx-community/Qwen3-Next-80B-A3B-Instruct-4bit"&gt;https://huggingface.co/mlx-community/Qwen3-Next-80B-A3B-Instruct-4bit&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jarec707"&gt; /u/jarec707 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2chb/qwen3next_80b_mlx_mac_runs_on_latest_lm_studio/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2chb/qwen3next_80b_mlx_mac_runs_on_latest_lm_studio/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ni2chb/qwen3next_80b_mlx_mac_runs_on_latest_lm_studio/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-09-15T23:59:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpk2va</id>
    <title>Announcing LocalLlama discord server &amp; bot!</title>
    <updated>2025-08-13T23:21:05+00:00</updated>
    <author>
      <name>/u/HOLUPREDICTIONS</name>
      <uri>https://old.reddit.com/user/HOLUPREDICTIONS</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"&gt; &lt;img alt="Announcing LocalLlama discord server &amp;amp; bot!" src="https://b.thumbs.redditmedia.com/QBscWhXGvo8sy9oNNt-7et1ByOGRWY1UckDAudAWACM.jpg" title="Announcing LocalLlama discord server &amp;amp; bot!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;INVITE: &lt;a href="https://discord.gg/rC922KfEwj"&gt;https://discord.gg/rC922KfEwj&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There used to be one old discord server for the subreddit but it was deleted by the previous mod.&lt;/p&gt; &lt;p&gt;Why? The subreddit has grown to 500k users - inevitably, some users like a niche community with more technical discussion and fewer memes (even if relevant).&lt;/p&gt; &lt;p&gt;We have a discord bot to test out open source models.&lt;/p&gt; &lt;p&gt;Better contest and events organization.&lt;/p&gt; &lt;p&gt;Best for quick questions or showcasing your rig!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/HOLUPREDICTIONS"&gt; /u/HOLUPREDICTIONS &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1mpk2va"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-08-13T23:21:05+00:00</published>
  </entry>
</feed>
