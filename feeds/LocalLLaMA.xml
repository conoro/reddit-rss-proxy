<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>/r/LocalLLaMA/.rss</id>
  <title>LocalLlama</title>
  <updated>2025-10-22T09:50:03+00:00</updated>
  <link href="https://old.reddit.com/r/LocalLLaMA/" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <icon>https://www.redditstatic.com/icon.png/</icon>
  <subtitle>Subreddit to discuss AI &amp; Llama, the large language model created by Meta AI.</subtitle>
  <entry>
    <id>t3_1ocwgbd</id>
    <title>LightMem: Lightweight and Efficient Memory-Augmented Generation</title>
    <updated>2025-10-22T02:31:48+00:00</updated>
    <author>
      <name>/u/ninjasaid13</name>
      <uri>https://old.reddit.com/user/ninjasaid13</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocwgbd/lightmem_lightweight_and_efficient/"&gt; &lt;img alt="LightMem: Lightweight and Efficient Memory-Augmented Generation" src="https://external-preview.redd.it/Vz1tGWDVLFBIcbps1hsHSJnZvapRNJ6J90cKRuj9Z_E.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=e369e9cbe95d9dd4f3369a3ea4260eac1db9a696" title="LightMem: Lightweight and Efficient Memory-Augmented Generation" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ninjasaid13"&gt; /u/ninjasaid13 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://github.com/zjunlp/LightMem"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocwgbd/lightmem_lightweight_and_efficient/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocwgbd/lightmem_lightweight_and_efficient/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T02:31:48+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocw1sc</id>
    <title>CVE-2025-23313: Critical Vulnerability in NVIDIA NeMo Framework Leads to Potential System Compromise - Ameeba Exploit Tracker</title>
    <updated>2025-10-22T02:11:51+00:00</updated>
    <author>
      <name>/u/Steve_Dobbs_003</name>
      <uri>https://old.reddit.com/user/Steve_Dobbs_003</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocw1sc/cve202523313_critical_vulnerability_in_nvidia/"&gt; &lt;img alt="CVE-2025-23313: Critical Vulnerability in NVIDIA NeMo Framework Leads to Potential System Compromise - Ameeba Exploit Tracker" src="https://external-preview.redd.it/evxmH_O5UxnAXaOR2Nq_dcRrVbB2jwS2a8V9Y4wAGaM.png?width=320&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=ec12cf93984214c6e4329039763856fe0c5cc39c" title="CVE-2025-23313: Critical Vulnerability in NVIDIA NeMo Framework Leads to Potential System Compromise - Ameeba Exploit Tracker" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Steve_Dobbs_003"&gt; /u/Steve_Dobbs_003 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.ameeba.com/blog/cve-2025-23313-critical-vulnerability-in-nvidia-nemo-framework-leads-to-potential-system-compromise/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocw1sc/cve202523313_critical_vulnerability_in_nvidia/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocw1sc/cve202523313_critical_vulnerability_in_nvidia/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T02:11:51+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocnohl</id>
    <title>Qwen3-VL-2B , it works very well ocr</title>
    <updated>2025-10-21T20:13:41+00:00</updated>
    <author>
      <name>/u/Illustrious-Swim9663</name>
      <uri>https://old.reddit.com/user/Illustrious-Swim9663</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocnohl/qwen3vl2b_it_works_very_well_ocr/"&gt; &lt;img alt="Qwen3-VL-2B , it works very well ocr" src="https://b.thumbs.redditmedia.com/NvNLG1hzs6RPYC_difrPtdpvyMrKLDvDAdqUHQLLbnc.jpg" title="Qwen3-VL-2B , it works very well ocr" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;our friend Maziyar did a test with good results and also left us a Google colab so that we can run it&lt;/p&gt; &lt;p&gt;&lt;a href="https://x.com/MaziyarPanahi/status/1980692255414628637?t=VXwW705ixLW-rsai_37M_A&amp;amp;s=19"&gt;https://x.com/MaziyarPanahi/status/1980692255414628637?t=VXwW705ixLW-rsai_37M_A&amp;amp;s=19&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Illustrious-Swim9663"&gt; /u/Illustrious-Swim9663 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1ocnohl"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocnohl/qwen3vl2b_it_works_very_well_ocr/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocnohl/qwen3vl2b_it_works_very_well_ocr/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T20:13:41+00:00</published>
  </entry>
  <entry>
    <id>t3_1od1yrl</id>
    <title>DeepSeek-OCR: Observations on Compression Ratio and Accuracy</title>
    <updated>2025-10-22T07:43:54+00:00</updated>
    <author>
      <name>/u/thalacque</name>
      <uri>https://old.reddit.com/user/thalacque</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;When I saw DeepSeek-OCR claim it renders long documents into images first and then “optically compresses” them with a vision encoder, my first reaction was: is this real, and can it run stably? I grabbed the open-source model from Hugging Face and started testing:&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/deepseek-ai/DeepSeek-OCR"&gt;https://huggingface.co/deepseek-ai/DeepSeek-OCR&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Getting started was smooth. A few resolution presets cover most needs: Tiny (512×512) feels like a quick skim; Base (1024×1024) is the daily-driver; for super-dense pages like newspapers or academic PDFs, switch to Gundam mode. I toggled between two prompts: use “Free OCR” to get plain text, or add |grounding|&amp;gt;Convert the document to markdown to pull structured output. I tested zero-shot with the default system prompt and temperature 0.2, focusing on reproducibility and stability.&lt;/p&gt; &lt;p&gt;A few results stood out:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;For a 1024×1024 magazine page, the DeepEncoder produced only 256 visual tokens, and inference didn’t blow up VRAM.&lt;/li&gt; &lt;li&gt;In public OmniDocBench comparisons, the smaller “Small” mode with 100 tokens can outperform GOT-OCR2.0 at 256 tokens.&lt;/li&gt; &lt;li&gt;Gundam mode uses under 800 tokens yet surpasses MinerU2.0’s ~7000-token pipeline.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;That’s a straight “less is more” outcome.&lt;/p&gt; &lt;p&gt;Based on my own usage plus reading others’ reports: around 10× compression still maintains ~97% OCR accuracy; pushing to 10–12× keeps ~90%; going all the way to 20× drops noticeably to ~60%. On cleaner, well-edited documents (e.g., long-form tech media), Free OCR typically takes just over 20 seconds (about 24s for me). Grounding does more parsing and feels close to a minute (about 58s), but you get Markdown structure restoration, which makes copy-paste a breeze.&lt;/p&gt; &lt;p&gt;My personal workflow:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Do a quick pass with Free OCR to confirm overall content.&lt;/li&gt; &lt;li&gt;If I need archival or further processing, rerun the Grounding version to export Markdown. Tables convert directly to HTML, and chemical formulas can even convert to SMILES, huge plus for academic PDFs.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Caveats, to be fair: don’t push the compression ratio too aggressively 10× and under is the sweet spot; beyond that you start to worry. Also, it’s not an instruction-tuned chat paradigm yet, so if you want to use it as a chatty, visual multimodal assistant, it still takes some prompt craft.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/thalacque"&gt; /u/thalacque &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od1yrl/deepseekocr_observations_on_compression_ratio_and/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od1yrl/deepseekocr_observations_on_compression_ratio_and/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od1yrl/deepseekocr_observations_on_compression_ratio_and/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T07:43:54+00:00</published>
  </entry>
  <entry>
    <id>t3_1occ8uv</id>
    <title>Confirmed: Junk social media data makes LLMs dumber</title>
    <updated>2025-10-21T12:58:04+00:00</updated>
    <author>
      <name>/u/nekofneko</name>
      <uri>https://old.reddit.com/user/nekofneko</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occ8uv/confirmed_junk_social_media_data_makes_llms_dumber/"&gt; &lt;img alt="Confirmed: Junk social media data makes LLMs dumber" src="https://a.thumbs.redditmedia.com/It6udXwo12VzdtUYx3sIoCiTZnQLhz-QLVIedLuaJN8.jpg" title="Confirmed: Junk social media data makes LLMs dumber" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;A new study from Texas A&amp;amp;M University and Purdue University proposes the &lt;em&gt;LLM Brain Rot Hypothesis&lt;/em&gt;: continual pretraining on “junk” social-media text (short, viral, sensational content) causes lasting declines in reasoning, long-context and safety.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/wq569rzfpgwf1.png?width=2772&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e7a14a98cc9682cd209918c93fa23222d2df7b23"&gt;https://preview.redd.it/wq569rzfpgwf1.png?width=2772&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=e7a14a98cc9682cd209918c93fa23222d2df7b23&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;ARC-Challenge with Chain Of Thoughts drops 74.9 → 57.2 and RULER-CWE 84.4 → 52.3 as junk ratio rises from 0% to 100%.&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/nekofneko"&gt; /u/nekofneko &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occ8uv/confirmed_junk_social_media_data_makes_llms_dumber/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occ8uv/confirmed_junk_social_media_data_makes_llms_dumber/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1occ8uv/confirmed_junk_social_media_data_makes_llms_dumber/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T12:58:04+00:00</published>
  </entry>
  <entry>
    <id>t3_1octe2s</id>
    <title>Pruned MoE REAP Quants For Testing</title>
    <updated>2025-10-22T00:07:24+00:00</updated>
    <author>
      <name>/u/12bitmisfit</name>
      <uri>https://old.reddit.com/user/12bitmisfit</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I was really interested in the &lt;a href="https://github.com/CerebrasResearch/reap"&gt;REAP&lt;/a&gt; pruning stuff and their code was easy enough to run.&lt;/p&gt; &lt;p&gt;I like messing around with this kind of stuff but I don't usually make it public. I figured there might be some interest in this though. &lt;/p&gt; &lt;p&gt;I have pruned Qwen3 30B A3B, Qwen3 30B A3B Instruct 2507, GPT OSS 20B and am pruning GPT OSS 120B and a couple other models. I will edit when they are finished. I have pruned them to 50% since it seemed Cerebras Research was releasing 25% pruned versions.&lt;/p&gt; &lt;p&gt;The pruning isn't too computationally expensive, at least it only utilizes about 40% of my CPU when running but the ram costs can be kinda high, with the 30b models taking about 60GB of ram, GPT-OSS 20b taking ~45GB of ram, and GPT-OSS 120B taking ~265GB of ram.&lt;/p&gt; &lt;p&gt;A reminder, the pruning reduces the size of the models but it doesn't reduce the active parameter count. It won't necessarily make the models run faster but it might let you squeeze the model entirely in vram / let you have more context in vram.&lt;/p&gt; &lt;p&gt;The Qwen3 30B models prune down to 15.72B&lt;/p&gt; &lt;p&gt;GPT-OSS 20B prunes down to 10.78B&lt;/p&gt; &lt;p&gt;I didn't do a ton a quants and messed up my naming on huggingface a bit but I'm a noob at both. I'm sure someone else will come along and do a better job. I made my quants with llama.cpp and no imatrix, just a simple llama-quantize.&lt;/p&gt; &lt;p&gt;With limited testing in lm-studio and llama.cpp the models seem alright but I've ran zero benchmarks or real tests to check.&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/12bitmisfit/Qwen3-30B-A3B_Pruned_REAP-15B-A3B-GGUF"&gt;Qwen3 30B A3B 50% pruned 15B A3B GGUF&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/12bitmisfit/Qwen3-30B-A3B-Instruct-2507_Pruned_REAP-15B-A3B-GGUF"&gt;Qwen3 30B A3B Instruct 2507 50% pruned 15B A3B GGUF&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/12bitmisfit/OpenAI_GPT-OSS-20B_Pruned_REAP_10B-GGUF"&gt;OpenAI GPT OSS 20B 50% pruned 10B GGUF&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/12bitmisfit"&gt; /u/12bitmisfit &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1octe2s/pruned_moe_reap_quants_for_testing/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1octe2s/pruned_moe_reap_quants_for_testing/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1octe2s/pruned_moe_reap_quants_for_testing/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T00:07:24+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocousf</id>
    <title>M5 using neural accelerators in the GPU is up to 3.65x faster for prefil in test</title>
    <updated>2025-10-21T20:58:20+00:00</updated>
    <author>
      <name>/u/CalmSpinach2140</name>
      <uri>https://old.reddit.com/user/CalmSpinach2140</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocousf/m5_using_neural_accelerators_in_the_gpu_is_up_to/"&gt; &lt;img alt="M5 using neural accelerators in the GPU is up to 3.65x faster for prefil in test" src="https://b.thumbs.redditmedia.com/_2L_YRnz2Q9byJk9pxrHjZventwminHxY2xB72DexZQ.jpg" title="M5 using neural accelerators in the GPU is up to 3.65x faster for prefil in test" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://x.com/MaxWinebach/status/1980688266304114912"&gt;https://x.com/MaxWinebach/status/1980688266304114912&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/blz39usp3jwf1.jpg?width=2026&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=c52e7e409972e818d7302b9f6c441cdee7539863"&gt;https://preview.redd.it/blz39usp3jwf1.jpg?width=2026&amp;amp;format=pjpg&amp;amp;auto=webp&amp;amp;s=c52e7e409972e818d7302b9f6c441cdee7539863&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Should be very useful for M5 pro and M5 Max later on. Decode is bound by mem bandwidth&lt;/p&gt; &lt;p&gt;The uplift is in reference to the M5 without using the neural accelerators&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/CalmSpinach2140"&gt; /u/CalmSpinach2140 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocousf/m5_using_neural_accelerators_in_the_gpu_is_up_to/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocousf/m5_using_neural_accelerators_in_the_gpu_is_up_to/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocousf/m5_using_neural_accelerators_in_the_gpu_is_up_to/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T20:58:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1od2t6b</id>
    <title>Can Ollama really help me write my paper? My experience with long essays.</title>
    <updated>2025-10-22T08:39:05+00:00</updated>
    <author>
      <name>/u/mvkb12</name>
      <uri>https://old.reddit.com/user/mvkb12</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve been experimenting with a few paper writing services for a while now, but I can’t seem to get long essays done smoothly. They either repeat themselves or stop halfway when I try to push them into a full essay assignment, like 1,000 - 1,500 words. It’s really frustrating because you think it’ll save time, but often you end up spending just as much trying to fix the sections that went wrong.&lt;br /&gt; I’ve tried different instructions and approaches, changing the way I prompt them, giving more context, or even splitting the essay into smaller sections, but nothing seems to work consistently. Sometimes the output is okay for shorter parts, but once it gets long, the flow breaks completely. At this point, I’ve even thought about trying a paper writing service like MyPaperHelp, though I’m not sure if that would really solve the problem or just bring new challenges such as cost or reliability.&lt;br /&gt; Has anyone figured out a method that actually works for long essays? Do you break it section by section or adjust the instructions differently? Any tips or experiences would be really helpful. I’m curious what works best for others dealing with the same problem and if there are any tricks to make these tools more reliable.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/mvkb12"&gt; /u/mvkb12 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od2t6b/can_ollama_really_help_me_write_my_paper_my/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od2t6b/can_ollama_really_help_me_write_my_paper_my/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od2t6b/can_ollama_really_help_me_write_my_paper_my/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T08:39:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocko1m</id>
    <title>Comparison new qwen 32b-vl vs qwen 30a3-vl</title>
    <updated>2025-10-21T18:22:10+00:00</updated>
    <author>
      <name>/u/Healthy-Nebula-3603</name>
      <uri>https://old.reddit.com/user/Healthy-Nebula-3603</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocko1m/comparison_new_qwen_32bvl_vs_qwen_30a3vl/"&gt; &lt;img alt="Comparison new qwen 32b-vl vs qwen 30a3-vl" src="https://b.thumbs.redditmedia.com/IQJxhOFgNXeP5HldjZTtWHPpItZ5QEcogwrGdma7mqE.jpg" title="Comparison new qwen 32b-vl vs qwen 30a3-vl" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Healthy-Nebula-3603"&gt; /u/Healthy-Nebula-3603 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1ocko1m"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocko1m/comparison_new_qwen_32bvl_vs_qwen_30a3vl/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocko1m/comparison_new_qwen_32bvl_vs_qwen_30a3vl/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T18:22:10+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocr8yr</id>
    <title>NanoChat WebGPU: Karpathy's full-stack ChatGPT project running 100% locally in the browser.</title>
    <updated>2025-10-21T22:33:16+00:00</updated>
    <author>
      <name>/u/xenovatech</name>
      <uri>https://old.reddit.com/user/xenovatech</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocr8yr/nanochat_webgpu_karpathys_fullstack_chatgpt/"&gt; &lt;img alt="NanoChat WebGPU: Karpathy's full-stack ChatGPT project running 100% locally in the browser." src="https://external-preview.redd.it/C6NMHSToauD7x286acmD5ScxM2pyQ5WKEd0P3gGkigQ.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=c39d83aefdbc0f288592ba981c632eeeb778c0d5" title="NanoChat WebGPU: Karpathy's full-stack ChatGPT project running 100% locally in the browser." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Today I added WebGPU support for Andrej Karpathy's nanochat models, meaning they can run 100% locally in your browser (no server required). The d32 version runs pretty well on my M4 Max at over 50 tokens per second. The web-app is encapsulated in a single index.html file, and there's a hosted version at &lt;a href="https://huggingface.co/spaces/webml-community/nanochat-webgpu"&gt;https://huggingface.co/spaces/webml-community/nanochat-webgpu&lt;/a&gt; if you'd like to try it out (or see the source code)! Hope you like it!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/xenovatech"&gt; /u/xenovatech &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/lqzpops0kjwf1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocr8yr/nanochat_webgpu_karpathys_fullstack_chatgpt/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocr8yr/nanochat_webgpu_karpathys_fullstack_chatgpt/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T22:33:16+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocqmxw</id>
    <title>Deal on Ryzen 395 w/ 128GB, now 1581€ in Europe</title>
    <updated>2025-10-21T22:08:11+00:00</updated>
    <author>
      <name>/u/Zyj</name>
      <uri>https://old.reddit.com/user/Zyj</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;A deal for my fellow European Local AI lovers: The Bosgame M5 has increased in price from 1450€ to 1581€ &lt;strong&gt;but&lt;/strong&gt; now it's being sent from Germany to European customers instead of China, so there are no more extra taxes! That means it's around 170€ &lt;em&gt;cheaper&lt;/em&gt; than before. It's &lt;strong&gt;by far&lt;/strong&gt; the cheapest Ryzen AI MAX+ 395 with 128GB DDR5-8000 RAM that I know of. (&lt;a href="https://www.bosgamepc.com/products/bosgame-m5-ai-mini-desktop-ryzen-ai-max-395"&gt;Shop link&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;Notebookcheck did a test of this particular model in August and they quite liked it: &lt;a href="https://www.notebookcheck.net/Best-mini-PC-of-the-year-AMD-Strix-Halo-128-GB-RAM-Radeon-RX-8060S-reviewed-in-the-Bosgame-M5.1087793.0.html"&gt;https://www.notebookcheck.net/Best-mini-PC-of-the-year-AMD-Strix-Halo-128-GB-RAM-Radeon-RX-8060S-reviewed-in-the-Bosgame-M5.1087793.0.html&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Zyj"&gt; /u/Zyj &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocqmxw/deal_on_ryzen_395_w_128gb_now_1581_in_europe/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocqmxw/deal_on_ryzen_395_w_128gb_now_1581_in_europe/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocqmxw/deal_on_ryzen_395_w_128gb_now_1581_in_europe/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T22:08:11+00:00</published>
  </entry>
  <entry>
    <id>t3_1od0gw9</id>
    <title>LoRA/QLoRA: The most significant training parameters that affect the VRAM (Axolotl)</title>
    <updated>2025-10-22T06:08:29+00:00</updated>
    <author>
      <name>/u/FPham</name>
      <uri>https://old.reddit.com/user/FPham</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od0gw9/loraqlora_the_most_significant_training/"&gt; &lt;img alt="LoRA/QLoRA: The most significant training parameters that affect the VRAM (Axolotl)" src="https://b.thumbs.redditmedia.com/ENjmzt0VtQ0hRATpOfitjxfrOhzW8M-RK6XzIYbpEVo.jpg" title="LoRA/QLoRA: The most significant training parameters that affect the VRAM (Axolotl)" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So you are still churning LoRA's like I do? Good.&lt;br /&gt; Here is an educational excerpt from my mammoth 1000 pages book on LORA/QLORA training that serves two purposes:&lt;br /&gt; 1. To teach you something I actually know very well and spend a small town worth of electricity to find out.&lt;br /&gt; 2. To remind you I wrote a huge, gigantic book about the subject &amp;quot;&lt;a href="https://www.amazon.com/dp/B0FLBTR2FS"&gt;The Cranky Man's Guide to LoRA &amp;amp; QLoRA&lt;/a&gt;&amp;quot;, the only one that has all my personal unadulterated LoRA/QLoRA knowledge.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/6t77gnbfqlwf1.png?width=200&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bcf30b79ff6a17bb0af88920caac6065b07823b4"&gt;https://preview.redd.it/6t77gnbfqlwf1.png?width=200&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=bcf30b79ff6a17bb0af88920caac6065b07823b4&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;The most significant training parameters that affect the VRAM&lt;/h1&gt; &lt;p&gt;In an ideal world, you wouldn't need to worry about VRAM. But you don't live in an ideal world, so you have to worry about VRAM. A lot. When the dreaded CUDA out of memory error strikes, here are the levers you can pull, in order from most effective to &amp;quot;last resort.&amp;quot;&lt;/p&gt; &lt;h1&gt;Core Training Parameters&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Batch Size (Axolotl: micro_batch_size):&lt;/strong&gt; A higher batch size rapidly increases VRAM usage. While it can improve generalization and speed up training, it's often the first thing you need to cut.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Rank (Axolotl: lora_r):&lt;/strong&gt; A higher rank increases VRAM, but not as dramatically as the batch size. However, changing the rank has a profound effect on what the model learns, shifting from just style to remembering exact words.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Context Length (Axolotl: sequence_len):&lt;/strong&gt; This defines the size of the text block being processed at one time. It's directly tied to the batch size in memory consumption. Lowering the batch size by half or lowering the context length by half has a similar VRAM-saving effect.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Other VRAM-Saving Techniques&lt;/h1&gt; &lt;p&gt;If tweaking the core parameters isn't enough, here are other powerful tools in your arsenal:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Drop the number of target modules&lt;/strong&gt;&lt;br /&gt; If you're training all linear targets, you can drop them to only q_proj and v_proj. This will free up an enormous amount of VRAM. The training will be different, of course, but for many tasks, a Q/V-only LoRA with a large rank is a fantastic method.&lt;/p&gt; &lt;p&gt;In Axolotl, lora_target_linear: true is a shortcut for all linear targets. To use only specific ones, set it to false (or remove the line) and define them manually:&lt;/p&gt; &lt;p&gt;lora_target_modules:&lt;/p&gt; &lt;p&gt; - q_proj&lt;/p&gt; &lt;p&gt; - v_proj&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Yellow Alert:&lt;/strong&gt; This simple list works for text-only models. If you have a multimodal model, you'll need to specify a regex string to pick only the text layers, for example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;lora\_target\_modules: 'model.language\_model.layers.\[\\d\]+.(self\_attn).(q|v)\_proj' &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Change the optimizer.&lt;/h1&gt; &lt;p&gt;AdamW can be swapped for adamw_8bit, which will significantly reduce VRAM requirements.&lt;/p&gt; &lt;p&gt;optimizer: adamw_8bit&lt;/p&gt; &lt;h1&gt;Train QLoRA instead of LoRA.&lt;/h1&gt; &lt;p&gt;If you are training LoRA (on a model in FP16 or BF16), you can train QLoRA instead. The QLoRA method first quantizes the model to 4-bit, which has a huge impact on VRAM. In Training PRO, this is done by loading the model with the load-in-4-bit checkbox ticked.&lt;/p&gt; &lt;p&gt;load_in_4bit: true&lt;/p&gt; &lt;p&gt;adapter: qlora&lt;/p&gt; &lt;h1&gt;Enable Gradient Checkpointing.&lt;/h1&gt; &lt;p&gt;This significantly reduces VRAM usage at the cost of slightly increased training time. In Axolotl, set &lt;/p&gt; &lt;p&gt;gradient_checkpointing: true&lt;/p&gt; &lt;h1&gt;Disable Evaluation during training.&lt;/h1&gt; &lt;p&gt;If your training crashes during the evaluation step, you can disable it in the config file by setting &lt;/p&gt; &lt;p&gt;eval_strategy: &amp;quot;no&amp;quot;.&lt;/p&gt; &lt;h1&gt;Proper Context Length adjustment (Axolotl: sequence_len)&lt;/h1&gt; &lt;p&gt;Make sure you are not wasting VRAM by training on dummy (padded) tokens. This happens when you use a sequence_len that is much longer than your actual data.&lt;/p&gt; &lt;p&gt;Many example configs will set sequence_len to something like 2048, but that only makes sense if your dataset items (instruction + response + template tags) are actually that long. If you use that setting with much shorter data, the unused space gets padded with &amp;lt;unk&amp;gt; tokens. These are masked out and not trained on, but they still consume an enormous amount of VRAM.&lt;/p&gt; &lt;p&gt;To avoid this rookie error, check the length of your longest item and set sequence_len accordingly. In some of my small datasets, the longest item might be 50 tokens longer than the second-longest. In that case, the best move is to remove the outlier and set the context length to fit the rest of the data. Those 50 tokens can easily be the difference between fitting in VRAM or not.&lt;/p&gt; &lt;p&gt;Conversely, setting the context length too short will cause the trainer to drop items that are too long to fit. In Axolotl, you'll see a warning in the terminal: Dropped X long samples from dataset. A few dropped samples might be an acceptable trade-off. If you're losing a significant number, you need to increase sequence_len.&lt;/p&gt; &lt;p&gt;In practice, it is always better to remove longer items you can't afford to train than to have them truncated, as truncation can cut off the most important part of the response.&lt;/p&gt; &lt;p&gt;In any case, make sure you are not actually training dummy (masked out) tokens by using context length that is longer than your longest trained item.&lt;/p&gt; &lt;h1&gt;Target Modules and VRAM savings&lt;/h1&gt; &lt;p&gt;If you are fine-tuning at home and get the dreaded CUDA out of memory error, dropping the target modules to only &lt;strong&gt;q_proj&lt;/strong&gt; and &lt;strong&gt;v_proj&lt;/strong&gt; is one of the easiest ways to free up &lt;strong&gt;a lot&lt;/strong&gt; of VRAM. In fact, using only Q/V targets was my go-to method for most of my own fine-tunes on a single GPU, especially when working with smaller, specialized datasets (say, under 5,000 entries).&lt;/p&gt; &lt;p&gt;When you fine-tune on a small dataset, training &lt;em&gt;all&lt;/em&gt; projections can rapidly &amp;quot;dumb down&amp;quot; the base model by overwriting its broad knowledge with your narrow, likely inferior data. Targeting only Q and V, on the other hand, acts more like a soft touch-up. It nudges the model's attention mechanism without completely rewiring its core reasoning, preserving its general &amp;quot;smartness&amp;quot; while still teaching the new behavior.&lt;/p&gt; &lt;p&gt;This is why training all targets on a small dataset often does the opposite of what you want. However, if you have a massive dataset (tens of thousands of high-quality items), then using all projections is the right call. It allows the LoRA to make changes that are deep and broad enough to approach the quality of a full fine-tune. But you probably don’t want to do that on a home computer, unless you're also using it to heat up your room.&lt;/p&gt; &lt;h1&gt;The VRAM Cost&lt;/h1&gt; &lt;p&gt;The VRAM cost increases rapidly as you add more targets. Each new projection you target, like k_proj, o_proj, or the feed-forward layers (gate_proj, up_proj, down_proj), requires its own set of adapter weights, optimizer states, and gradients.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;A Cranky Observation:&lt;/strong&gt; Most example configs you'll find for tools like Axolotl default to training all linear projections. As a result, many people use this setting indiscriminately, even on tiny datasets, without realizing they might be getting a worse result.&lt;/p&gt; &lt;h1&gt;Quantized Optimizer&lt;/h1&gt; &lt;p&gt;One of the most effective ways to significantly reduce VRAM requirements is to use an 8-bit optimizer. The standard adamw_torch optimizer eats a huge chunk of VRAM, and switching to an 8-bit version can dramatically lower that memory footprint.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;adamw_8bit&lt;/strong&gt; and &lt;strong&gt;adamw_bnb_8bit&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This is your first-choice VRAM-saving optimizer. The arithmetic for weight updates is still performed at a higher precision (like FP16), but the optimizer's state variables are stored in 8-bit, cutting their memory usage in half.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Use:&lt;/strong&gt; You have some GPU memory constraints, but they aren't extremely severe.&lt;/p&gt; &lt;p&gt;You noticed there are two 8-bit AdamW options, and your instincts are right to be suspicious. They are &lt;strong&gt;not&lt;/strong&gt; the same thing. They come from two different libraries, each with its own history and implementation details.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Adamw_bnb_8bit:&lt;/strong&gt; This comes from the same group of researchers (led by Tim Dettmers) who developed QLoRA and the 4-bit quantization methods we all rely on. It is &lt;strong&gt;specifically designed to work seamlessly with the QLoRA training pipeline&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Adamw_8bit:&lt;/strong&gt; Usually refers to the 8-bit AdamW optimizer from NVIDIA's &lt;strong&gt;Apex&lt;/strong&gt; library. The underlying implementation is different and generally considered less advanced than the modern block-wise approach in bitsandbytes.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;The Cranky Man’s Verdict&lt;/strong&gt;: Stick with &lt;strong&gt;adamw_bnb_8bit&lt;/strong&gt;. The team that gave you the magic of QLoRA also gave you the optimizer to go with it. Use it.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;paged_adamw_8bit&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;This version pushes the memory savings even further by &amp;quot;paging&amp;quot; optimizer states that aren't actively being used out of VRAM and into your much larger CPU memory (or even to disk). This can free up several gigabytes more.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Use:&lt;/strong&gt; You are working with extremely large models and are desperately out of VRAM.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;A Cranky Man's Warning:&lt;/strong&gt; Be careful with &lt;strong&gt;paged_adamw_8bit&lt;/strong&gt;. I've had a few Blue Screens of Death (BSOD) when using it, especially when a training run exhausts VRAM and I try to close the terminal window. Boom! The system doesn’t always exit gracefully from the paging procedure.&lt;/p&gt; &lt;h1&gt;Does It Affect Quality?&lt;/h1&gt; &lt;p&gt;Using an 8-bit optimizer &lt;em&gt;can&lt;/em&gt; potentially lower the quality of the final model compared to the standard 32-bit AdamW, but in practice, the impact is often surprisingly small and sometimes not even noticeable.&lt;/p&gt; &lt;p&gt;In other words, if your model doesn't perform well, choosing an 8-bit optimizer is almost never the real culprit. The problem is far more likely to be your learning rate, number of epochs, LoRA rank, or the quality of your dataset.&lt;/p&gt; &lt;h1&gt;Axolotl Unslot-ish optimizations&lt;/h1&gt; &lt;p&gt;Taking inspiration from the Unsloth, Axolotl team implemented custom CUDA kernels and PyTorch autograd functions to improve both the speed (up to 1.4 times) and peak VRAM usage (up to 35% savings) of LoRA workflows.&lt;/p&gt; &lt;p&gt;Enabling these is easy: &lt;/p&gt; &lt;p&gt;lora_mlp_kernel: true&lt;/p&gt; &lt;p&gt;lora_qkv_kernel: true&lt;/p&gt; &lt;p&gt;lora_o_kernel: true&lt;/p&gt; &lt;p&gt;The requirement is the ability to use Triton kernels, that means NVIDIA or AMD GPU only.&lt;br /&gt; Also at this moment &lt;em&gt;lora_dropout&lt;/em&gt; is not supported with these custom Triton kernels so you need to disable it (this might change in the future):&lt;/p&gt; &lt;p&gt;# Dropout is not supported with custom Triton kernels&lt;/p&gt; &lt;p&gt;# lora_dropout: 0.05&lt;/p&gt; &lt;p&gt;And finally:&lt;/p&gt; &lt;h1&gt;Cranky Man’s VRAM saving nursery rhyme:&lt;/h1&gt; &lt;blockquote&gt; &lt;p&gt;Batch down first, that's VRAM's curse,&lt;/p&gt; &lt;p&gt;Rank comes next, but test it best,&lt;/p&gt; &lt;p&gt;Shrink your Context, trim it tight,&lt;/p&gt; &lt;p&gt;Drop projections, Q and V’s alright,&lt;/p&gt; &lt;p&gt;Eight-bit Adam saves the day,&lt;/p&gt; &lt;p&gt;And QLORA cuts the load halfway!&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;Of course you can read much, much, much more about LoRA and QLora training with real life examples in the rest of 990 or so pages, hahaha.&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.amazon.com/dp/B0FLBTR2FS"&gt;https://www.amazon.com/dp/B0FLBTR2FS&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Also on Apple books, noble, kobo,....&lt;br /&gt; Any proceeds from this will go directly to my LLM and crazy stuff fund. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/FPham"&gt; /u/FPham &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od0gw9/loraqlora_the_most_significant_training/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od0gw9/loraqlora_the_most_significant_training/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od0gw9/loraqlora_the_most_significant_training/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T06:08:29+00:00</published>
  </entry>
  <entry>
    <id>t3_1occyly</id>
    <title>Qwen3-Next 80B-A3B llama.cpp implementation with CUDA support half-working already (up to 40k context only), also Instruct GGUFs</title>
    <updated>2025-10-21T13:28:06+00:00</updated>
    <author>
      <name>/u/Ok_Top9254</name>
      <uri>https://old.reddit.com/user/Ok_Top9254</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occyly/qwen3next_80ba3b_llamacpp_implementation_with/"&gt; &lt;img alt="Qwen3-Next 80B-A3B llama.cpp implementation with CUDA support half-working already (up to 40k context only), also Instruct GGUFs" src="https://preview.redd.it/a21ouwhkvgwf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=242dfbde4c1caaaa4f35057e48df50de5e9cc8f6" title="Qwen3-Next 80B-A3B llama.cpp implementation with CUDA support half-working already (up to 40k context only), also Instruct GGUFs" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/ggml-org/llama.cpp/pull/16095#issuecomment-3424224842"&gt;Llama.cpp pull request&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://huggingface.co/lefromage/Qwen3-Next-80B-A3B-Instruct-GGUF"&gt;GGUFs for Instruct model&lt;/a&gt; (old news but info for the uninitiated)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Ok_Top9254"&gt; /u/Ok_Top9254 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/a21ouwhkvgwf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occyly/qwen3next_80ba3b_llamacpp_implementation_with/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1occyly/qwen3next_80ba3b_llamacpp_implementation_with/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T13:28:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1oct4ug</id>
    <title>AI developers can now run LLMs or other AI workloads on ARM-based MacBooks with the power of Nvidia RTX GPUs.</title>
    <updated>2025-10-21T23:55:44+00:00</updated>
    <author>
      <name>/u/ANR2ME</name>
      <uri>https://old.reddit.com/user/ANR2ME</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://www.tomshardware.com/pc-components/gpus/tiny-corp-successfully-runs-an-nvidia-gpu-on-arm-macbook-through-usb4-using-an-external-gpu-docking-station"&gt;https://www.tomshardware.com/pc-components/gpus/tiny-corp-successfully-runs-an-nvidia-gpu-on-arm-macbook-through-usb4-using-an-external-gpu-docking-station&lt;/a&gt;&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The main issue is that TinyCorp's drivers only work with Nvidia GPUs featuring a GPU system processor, which is why no GTX-series graphics cards are supported. AMD GPUs based on RDNA 2, 3, and 4 reportedly work as well.&lt;/p&gt; &lt;/blockquote&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/ANR2ME"&gt; /u/ANR2ME &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1oct4ug/ai_developers_can_now_run_llms_or_other_ai/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1oct4ug/ai_developers_can_now_run_llms_or_other_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1oct4ug/ai_developers_can_now_run_llms_or_other_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T23:55:44+00:00</published>
  </entry>
  <entry>
    <id>t3_1occan8</id>
    <title>vLLM + OpenWebUI + Tailscale = private, portable AI</title>
    <updated>2025-10-21T13:00:13+00:00</updated>
    <author>
      <name>/u/zhambe</name>
      <uri>https://old.reddit.com/user/zhambe</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occan8/vllm_openwebui_tailscale_private_portable_ai/"&gt; &lt;img alt="vLLM + OpenWebUI + Tailscale = private, portable AI" src="https://b.thumbs.redditmedia.com/cRxS8E_CLjIUT07vC7k-8ob1jCAW2BZimcQfFKJicNg.jpg" title="vLLM + OpenWebUI + Tailscale = private, portable AI" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;My mind is positively blown... My own AI?!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/zhambe"&gt; /u/zhambe &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1occan8"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1occan8/vllm_openwebui_tailscale_private_portable_ai/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1occan8/vllm_openwebui_tailscale_private_portable_ai/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T13:00:13+00:00</published>
  </entry>
  <entry>
    <id>t3_1och0jn</id>
    <title>Nvidia quietly released RTX Pro 5000 Blackwell 72Gb</title>
    <updated>2025-10-21T16:05:55+00:00</updated>
    <author>
      <name>/u/AleksHop</name>
      <uri>https://old.reddit.com/user/AleksHop</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://www.reddit.com/r/nvidia/comments/1oc76i7/nvidia_quietly_launches_rtx_pro_5000_blackwell/"&gt;https://www.reddit.com/r/nvidia/comments/1oc76i7/nvidia_quietly_launches_rtx_pro_5000_blackwell/&lt;/a&gt;&lt;br /&gt; Price will be about 5000$&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/AleksHop"&gt; /u/AleksHop &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1och0jn/nvidia_quietly_released_rtx_pro_5000_blackwell/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1och0jn/nvidia_quietly_released_rtx_pro_5000_blackwell/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1och0jn/nvidia_quietly_released_rtx_pro_5000_blackwell/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T16:05:55+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocubgr</id>
    <title>AlphaXiv,Compare the Deepseek-OCR and Mistral-OCR OCR models</title>
    <updated>2025-10-22T00:50:12+00:00</updated>
    <author>
      <name>/u/Illustrious-Swim9663</name>
      <uri>https://old.reddit.com/user/Illustrious-Swim9663</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocubgr/alphaxivcompare_the_deepseekocr_and_mistralocr/"&gt; &lt;img alt="AlphaXiv,Compare the Deepseek-OCR and Mistral-OCR OCR models" src="https://preview.redd.it/cad0dcl99kwf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=92a74808e6f96bf30624a7c3deeabbfd027cf384" title="AlphaXiv,Compare the Deepseek-OCR and Mistral-OCR OCR models" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Illustrious-Swim9663"&gt; /u/Illustrious-Swim9663 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/cad0dcl99kwf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocubgr/alphaxivcompare_the_deepseekocr_and_mistralocr/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocubgr/alphaxivcompare_the_deepseekocr_and_mistralocr/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T00:50:12+00:00</published>
  </entry>
  <entry>
    <id>t3_1oclug7</id>
    <title>Getting most out of your local LLM setup</title>
    <updated>2025-10-21T19:05:35+00:00</updated>
    <author>
      <name>/u/Everlier</name>
      <uri>https://old.reddit.com/user/Everlier</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, been active LLM user since before LLama 2 weights, running my first inference of Flan-T5 with &lt;code&gt;transformers&lt;/code&gt; and later &lt;code&gt;ctranslate2&lt;/code&gt;. We regularly discuss our local setups here and I've been rocking mine for a couple of years now, so I have a few things to share. Hopefully some of them will be useful for your setup too. I'm not using an LLM to write this, so forgive me for any mistakes I made.&lt;/p&gt; &lt;h1&gt;Dependencies&lt;/h1&gt; &lt;p&gt;Hot topic. When you want to run 10-20 different OSS projects for the LLM lab - containers are almost a must. Image sizes are really unfortunate (especially with Nvidia stuff), but it's much less painful to store 40GBs of images locally than spending an entire evening on Sunday figuring out some obscure issue between Python / Node.js / Rust / Go dependencies. Setting it up is a one-time operation, but it simplifies upgrades and portability of your setup by a ton. Both Nvidia and AMD have very decent support for container runtimes, typically with a plugin for the container engine. Speaking about one - doesn't have to be Docker, but often it saves time to have the same bugs as everyone else.&lt;/p&gt; &lt;h1&gt;Choosing a Frontend&lt;/h1&gt; &lt;p&gt;The only advice I can give here is not to choose any single specific one, cause most will have their own disadvantages. I tested a lot of different ones, here is the gist:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Open WebUI&lt;/strong&gt; - has more features than you'll ever need, but can be tricky to setup/maintain. Using containerization really helps - you set it up one time and forget about it. One of the best projects in terms of backwards compatibility, I've started using it when it was called Ollama WebUI and all my chats were preserved through all the upgrades up to now.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Chat Nio&lt;/strong&gt; - can only recommend if you want to setup an LLM marketplace for some reason.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Hollama&lt;/strong&gt; - my go-to when I want a quick test of some API or model, you don't even need to install it in fact, it works perfectly fine from their GitHub pages (use it like that only if you know what you're doing though).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;HuggingFace ChatUI&lt;/strong&gt; - very basic, but without any feature bloat.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;KoboldCpp&lt;/strong&gt; - AIO package, less polished than the other projects, but have these &amp;quot;crazy scientist&amp;quot; vibes.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Lobe Chat&lt;/strong&gt; - similarly countless features like Open WebUI, but less polished and coherent, UX can be confusing at times. However, has a lot going on.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LibreChat&lt;/strong&gt; - another feature-rich Open WebUI alternative. Configuration can be a bit more confusing though (at least for me) due to a wierd approach to defining models and backends to connect to as well as how to fetch model lists from them.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Mikupad&lt;/strong&gt; - another &amp;quot;crazy scientist&amp;quot; project. Has a unique approach to generation and editing of the content. Supports a lot of lower-level config options compared to other frontends.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Parllama&lt;/strong&gt; - probably most feature-rich TUI frontend out there. Has a lot of features you would only expect to see in a web-based UI. A bit heavy, can be slow.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;oterm&lt;/strong&gt; - Ollama-specific, terminal-based, quite lightweight compared to some other options.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;aichat&lt;/strong&gt; - Has a very generic name (in the &lt;code&gt;sigoden&lt;/code&gt;s GitHub), but is one of the simplest LLM TUIs out there. Lightweight, minimalistic, and works well for a quick chat in terminal or some shell assistance.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;gptme&lt;/strong&gt; - Even simpler than &lt;code&gt;aichat&lt;/code&gt;, with some agentic features built-in.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Open Interpreter&lt;/strong&gt; - one of the OG TUI agents, looked very cool then got some funding then went silent and now it's not clear what's happening with it. Based on approaches that are quite dated now, so not worth trying unless you're curious about this one specifically.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The list above is of course not exhaustive, but these are the projects I had a chance to try myself. In the end, I always return to Open WebUI as after initial setup it's fairly easy to start and it has more features than I could ever need.&lt;/p&gt; &lt;h1&gt;Choosing a Backend&lt;/h1&gt; &lt;p&gt;Once again, no single best option here, but there are some clear &amp;quot;niche&amp;quot; choices depending on your use case.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;llama.cpp&lt;/strong&gt; - not much to say, you probably know everything about it already. Great (if not only) for lightweight or CPU-only setups.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Ollama&lt;/strong&gt; - when you simply don't have time to read &lt;code&gt;llama.cpp&lt;/code&gt; docs, or compiling it from scratch. It's up to you to decide on the attribution controversy and I'm not here to judge.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;vllm&lt;/strong&gt; - for a homelab, I can only recommend it if you have: a) Hardware, b) Patience, c) A specific set of models you run, d) a few other people that want to use your LLM with you. Goes one level deeper compared to &lt;code&gt;llama.cpp&lt;/code&gt; in terms of configurability and complexity, requires hunting for specific quants.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Aphrodite&lt;/strong&gt; - If you chose KoboldCpp over Open WebUI, you're likely to choose Aphrodite over vllm.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;KTransformers&lt;/strong&gt; - When you're trying to hunt down every last bit of performance your rig can provide. Has some very specific optimisation for specific hardware and specific LLM architectures.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;mistral.rs&lt;/strong&gt; - If you code in Rust, you might consider this over llama.cpp. The lead maintainer is very passionate about the project and often adds new architectures/features ahead of other backneds. At the same time, the project is insanely big, so things often take time to stabilize. Has some unique features that you won't find anywhere else: AnyMoE, ISQ quants, supports diffusion models, etc.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Modular MAX&lt;/strong&gt; - inference engine from creators of Mojo language. Meant to transform ML and LLM inference in general, but work is still in early stages. Models take ~30s to compile on startup. Typically runs the original FP16 weights, so requires beefy GPUs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Nexa SDK&lt;/strong&gt; - if you want something similar to Ollama, but you don't want Ollama itself. Concise CLI, supports a variety of architectures. Has bugs and usability issues due to a smaller userbase, but is actively developed. Might have some Corporate drama/controversy in the future.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;SGLang&lt;/strong&gt; - similar to &lt;code&gt;ktransformers&lt;/code&gt;, highly optimised for specific hardware and model architectures, but requires a lot of involvement for configuration and setup.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;TabbyAPI&lt;/strong&gt; - wraps Exllama2 and Exllama3 with a more convenient and easy-to-use package that one would expect from an inference engine. Approximately at the same level of complexity as &lt;code&gt;vllm&lt;/code&gt; or &lt;code&gt;llama.cpp&lt;/code&gt;, but requires more specific quants.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;HuggingFace Text Generation Inference&lt;/strong&gt; - it's like Ollama for &lt;code&gt;llama.cpp&lt;/code&gt; or TabbyAPI for Exllama3, but for &lt;code&gt;transformers&lt;/code&gt;. &amp;quot;Official&amp;quot; implementation, using same model architecture as a reference. Some common optimisations on top. Can be a more friendly alternative to &lt;code&gt;ktransformers&lt;/code&gt; or &lt;code&gt;sglang&lt;/code&gt;, but not as feature-rich.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;AirLLM&lt;/strong&gt; - extremely niche use-case. You have a workload that can be slow (overnight), no API-based LLMs are acceptable, your hardware only allows for tiny models, but the task needs some of the big boys. If all these boxes are ticket - AirLLM might help.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;I think that the key of a good homelab setup is to be able to quickly run an engine that is suitable for a specific model/feature that you want right now. Many more niche engines are moving faster than &lt;code&gt;llama.cpp&lt;/code&gt; (at the expense of stability), so having them available can allow testing new models/features earlier.&lt;/p&gt; &lt;h1&gt;TTS / STT&lt;/h1&gt; &lt;p&gt;I recommend projects that support OpenAI-compatible APIs here, that way they are more likely to integrate well with the other parts of your LLM setup. I can personally recommend Speaches (former &lt;code&gt;faster-whisper-server&lt;/code&gt;, more active) and &lt;code&gt;openedai-speech&lt;/code&gt; (less active, more hackable). Both have TTS and STT support, so you can build voice assistants with them. Containerized deployment is possible for both.&lt;/p&gt; &lt;h1&gt;Tunnels&lt;/h1&gt; &lt;p&gt;Exposing your homelab setup to the Internet can be very powerful. It's very dangerous too, so be careful. Less involved setups are based on running somethings like &lt;code&gt;cloudflared&lt;/code&gt; or &lt;code&gt;ngrok&lt;/code&gt; at the expense of some privacy and security. More involved setups are based on running your own VPN or reverse proxy with proper authentication. Tailscale is a great option.&lt;/p&gt; &lt;p&gt;A very useful/convenient add-on is to also generate a QR for your mobile device to connect to your homelab services quickly. There are some CLI tools for that too.&lt;/p&gt; &lt;h1&gt;Web RAG &amp;amp; Deep Search&lt;/h1&gt; &lt;p&gt;Almost a must for any kind of useful agentic system right now. The absolute easiest way to get one is to use &lt;a href="https://github.com/searxng/searxng"&gt;SearXNG&lt;/a&gt;. It connects nicely with a variety of frontends out of the box, including Open WebUI and LibreChat. You can run it in a container as well, so it's easy to maintain. Just make sure to configure it properly to avoid leaking your data to third parties. The quality is not great compared to paid search engines, but it's free and relatively private. If you have a budget, consider using Tavily or Jina for same purpose and every LLM will feel like a mini-Perplexity.&lt;/p&gt; &lt;p&gt;Some notable projects:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Local Deep Research&lt;/strong&gt; - &amp;quot;Deep research at home&amp;quot;, not quite in-depth, but works decently well&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Morphic&lt;/strong&gt; - Probably most convenient to setup out of the bunch.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Perplexica&lt;/strong&gt; - Started not very developer-friendly, with some gaps/unfinished features, so haven't used actively.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;SurfSense&lt;/strong&gt; - was looking quite promising in Nov 2024, but they didn't have pre-built images back then. Maybe better now.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Workflows&lt;/h1&gt; &lt;p&gt;Crazy amount of companies are building things for LLM-based automation now, most are looking like workflow engines. Pretty easy to have one locally too.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Dify&lt;/strong&gt; - very well polished, great UX and designed specifically for LLM workflows (unlike &lt;code&gt;n8n&lt;/code&gt; that is more general-purpose). The biggest drawback - lack of OpenAI-compatible API for built workflows/agents, but comes with built-in UI, traceability, and more.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Flowise&lt;/strong&gt; - Similar to Dify, but more focused on LangChain functionality. Was quite buggy last time I tried, but allowed for a simpler setup of basic agents.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LangFlow&lt;/strong&gt; - a more corporate-friendly version of Flowise/Dify, more polished, but locked on LangChain. Very turbulent development, breaking changes often introduced.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;n8n&lt;/strong&gt; - Probably most well-known one, fair-code workflow automation platform with native AI capabilities.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Open WebUI Pipelines&lt;/strong&gt; - Most powerful option if you firmly settled on Open WebUI and can do some Python, can do wild things for chat workflows.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Coding&lt;/h1&gt; &lt;p&gt;Very simple, current landscape is dominated by TUI agents. I tried a few personally, but unfortunately can't say that I use any of them regularly, compared to the agents based on the cloud LLMs. OpenCode + Qwen 3 Coder 480B, GLM 4.6, Kimi K2 get quite close but not close enough for me, your experience may vary.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;OpenCode&lt;/strong&gt; - great performance, good support for a variety of local models.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Crush&lt;/strong&gt; - the agent seems to perform worse than OpenCode with same models, but more eye-candy.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Aider&lt;/strong&gt; - the OG. Being a mature well-developed project is both a pro and a con. Agentic landscape is moving fast, some solutions that were good in the past are not that great anymore (mainly talking about tool call formatting).&lt;/li&gt; &lt;li&gt;&lt;strong&gt;OpenHands&lt;/strong&gt; - provides a TUI agents with a WebUI, pairs nicely with Codestral, aims to be OSS version of Devin, but the quality of the agents is not quite there yet.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Extras&lt;/h1&gt; &lt;p&gt;Some other projects that can be useful for a specific use-case or just for fun. Recent smaller models suddenly became very good at agentic tasks, so surprisingly many of these tools work well enough.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Agent Zero&lt;/strong&gt; - general-purpose personal assistant with Web RAG, persistent memory, tools, browser use and more.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Airweave&lt;/strong&gt; - ETL tool for LLM knowledge, helps to prepare data for agentic use.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Bolt.new&lt;/strong&gt; - Full-stack app development fully in the browser.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Browser Use&lt;/strong&gt; - LLM-powered browser automation with web UI.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Docling&lt;/strong&gt; - Transform documents into format ready for LLMs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Fabric&lt;/strong&gt; - LLM-driven processing of the text data in the terminal.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LangFuse&lt;/strong&gt; - easy LLM Observability, metrics, evals, prompt management, playground, datasets.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Latent Scope&lt;/strong&gt; - A new kind of workflow + tool for visualizing and exploring datasets through the lens of latent spaces.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LibreTranslate&lt;/strong&gt; - A free and open-source machine translation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LiteLLM&lt;/strong&gt; - LLM proxy that can aggregate multiple inference APIs together into a single endpoint.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;LitLytics&lt;/strong&gt; - Simple analytics platform that leverages LLMs to automate data analysis.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;llama-swap&lt;/strong&gt; - Runs multiple llama.cpp servers on demand for seamless switching between them.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;lm-evaluation-harness&lt;/strong&gt; - A de-facto standard framework for the few-shot evaluation of language models. I can't tell that it's very user-friendly though, figuring out how to run evals for a local LLM takes some effort.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;mcpo&lt;/strong&gt; - Turn MCP servers into OpenAPI REST APIs - use them anywhere.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;MetaMCP&lt;/strong&gt; - Allows to manage MCPs via a WebUI, exposes multiple MCPs as a single server.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;OptiLLM&lt;/strong&gt; - Optimising LLM proxy that implements many advanced workflows to boost the performance of the LLMs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Promptfoo&lt;/strong&gt; - A very nice developer-friendly way to setup evals for anything OpenAI-API compatible, including local LLMs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Repopack&lt;/strong&gt; - Packs your entire repository into a single, AI-friendly file.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;SQL Chat&lt;/strong&gt; - Chat-based SQL client, which uses natural language to communicate with the database. Be wary about connecting to the data you actually care about without proper safeguards.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;SuperGateway&lt;/strong&gt; - A simple and powerful API gateway for LLMs.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;TextGrad&lt;/strong&gt; - Automatic &amp;quot;Differentiation&amp;quot; via Text - using large language models to backpropagate textual gradients.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Webtop&lt;/strong&gt; - Linux in a web browser supporting popular desktop environments. Very conventient for local Computer Use.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Hopefully some of this was useful! Thanks.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Everlier"&gt; /u/Everlier &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1oclug7/getting_most_out_of_your_local_llm_setup/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1oclug7/getting_most_out_of_your_local_llm_setup/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1oclug7/getting_most_out_of_your_local_llm_setup/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T19:05:35+00:00</published>
  </entry>
  <entry>
    <id>t3_1od35w1</id>
    <title>New model from Tencent, HunyuanWorld-Mirror</title>
    <updated>2025-10-22T09:01:59+00:00</updated>
    <author>
      <name>/u/edward-dev</name>
      <uri>https://old.reddit.com/user/edward-dev</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od35w1/new_model_from_tencent_hunyuanworldmirror/"&gt; &lt;img alt="New model from Tencent, HunyuanWorld-Mirror" src="https://external-preview.redd.it/4mzrgM79cCe_QE-8XZM35Vw90_ckM3tR76mq1apuGAU.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=1d7d696f5cccceda23331d47643538ea7a5dce0c" title="New model from Tencent, HunyuanWorld-Mirror" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;HunyuanWorld-Mirror is a versatile feed-forward model for comprehensive 3D geometric prediction. It integrates diverse geometric priors (camera poses, calibrated intrinsics, depth maps) and simultaneously generates various 3D representations (point clouds, multi-view depths, camera parameters, surface normals, 3D Gaussians) in a single forward pass.&lt;/p&gt; &lt;p&gt;Really interesting for folks into 3D...&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/edward-dev"&gt; /u/edward-dev &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://huggingface.co/tencent/HunyuanWorld-Mirror"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od35w1/new_model_from_tencent_hunyuanworldmirror/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od35w1/new_model_from_tencent_hunyuanworldmirror/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T09:01:59+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocgun0</id>
    <title>DeepSeek-OCR AI can scan an entire microfiche sheet and not just cells and retain 100% of the data in seconds...</title>
    <updated>2025-10-21T16:00:06+00:00</updated>
    <author>
      <name>/u/Xtianus21</name>
      <uri>https://old.reddit.com/user/Xtianus21</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocgun0/deepseekocr_ai_can_scan_an_entire_microfiche/"&gt; &lt;img alt="DeepSeek-OCR AI can scan an entire microfiche sheet and not just cells and retain 100% of the data in seconds..." src="https://b.thumbs.redditmedia.com/Dsj93JBsqXXjXoOsuIY5K8HbnnE2QjHtG5dVlESoKDU.jpg" title="DeepSeek-OCR AI can scan an entire microfiche sheet and not just cells and retain 100% of the data in seconds..." /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://x.com/BrianRoemmele/status/1980634806145957992"&gt;https://x.com/BrianRoemmele/status/1980634806145957992&lt;/a&gt;&lt;/p&gt; &lt;p&gt;AND &lt;/p&gt; &lt;p&gt;Have a full understanding of the text/complex drawings and their context. &lt;/p&gt; &lt;p&gt;I just changed offline data curation!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Xtianus21"&gt; /u/Xtianus21 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1ocgun0"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocgun0/deepseekocr_ai_can_scan_an_entire_microfiche/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocgun0/deepseekocr_ai_can_scan_an_entire_microfiche/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T16:00:06+00:00</published>
  </entry>
  <entry>
    <id>t3_1och7m9</id>
    <title>Qwen3-VL-2B and Qwen3-VL-32B Released</title>
    <updated>2025-10-21T16:13:23+00:00</updated>
    <author>
      <name>/u/TKGaming_11</name>
      <uri>https://old.reddit.com/user/TKGaming_11</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1och7m9/qwen3vl2b_and_qwen3vl32b_released/"&gt; &lt;img alt="Qwen3-VL-2B and Qwen3-VL-32B Released" src="https://preview.redd.it/n4rx9o72phwf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=31c5eea069f1786b249324b0d23eca9977c6918b" title="Qwen3-VL-2B and Qwen3-VL-32B Released" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/TKGaming_11"&gt; /u/TKGaming_11 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/n4rx9o72phwf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1och7m9/qwen3vl2b_and_qwen3vl32b_released/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1och7m9/qwen3vl2b_and_qwen3vl32b_released/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T16:13:23+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocx27p</id>
    <title>A quickly put together a GUI for the DeepSeek-OCR model that makes it a bit easier to use</title>
    <updated>2025-10-22T03:01:37+00:00</updated>
    <author>
      <name>/u/SmashShock</name>
      <uri>https://old.reddit.com/user/SmashShock</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocx27p/a_quickly_put_together_a_gui_for_the_deepseekocr/"&gt; &lt;img alt="A quickly put together a GUI for the DeepSeek-OCR model that makes it a bit easier to use" src="https://external-preview.redd.it/wAx0-554iQTzQwf91BRGvJShhLon54aeVFhskNqXubo.png?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=9b92062881d606dc5d0bb4a9e9814b152550e5f6" title="A quickly put together a GUI for the DeepSeek-OCR model that makes it a bit easier to use" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I put together a GUI for DeepSeek's new OCR model. The model seems quite good at document understanding and structured text extraction so I figured it deserved the start of a proper interface.&lt;/p&gt; &lt;p&gt;The various OCR types available correspond in-order to the first 5 entries in &lt;a href="https://github.com/deepseek-ai/DeepSeek-OCR/blob/8cf003d38821fa1b19c73da3bd1b0dc262ea8136/README.md#prompts-examples"&gt;this list&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Flask backend manages the model, Electron frontend for the UI. The model downloads automatically from HuggingFace on first load, about 6.7 GB.&lt;/p&gt; &lt;p&gt;Runs on Windows, with untested support for Linux. Currently requires an Nvidia card. If you'd like to help test it out or fix issues on Linux or other platforms, or you would like to contribute in any other way, please feel free to make a PR!&lt;/p&gt; &lt;p&gt;Download and repo:&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/ihatecsv/deepseek-ocr-client"&gt;https://github.com/ihatecsv/deepseek-ocr-client&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/SmashShock"&gt; /u/SmashShock &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://v.redd.it/klnlh8omskwf1"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocx27p/a_quickly_put_together_a_gui_for_the_deepseekocr/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocx27p/a_quickly_put_together_a_gui_for_the_deepseekocr/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T03:01:37+00:00</published>
  </entry>
  <entry>
    <id>t3_1od0jw1</id>
    <title>[R] We figured out how to predict 32B model reasoning performance with a 1B model. 100x cheaper. Paper inside.</title>
    <updated>2025-10-22T06:13:40+00:00</updated>
    <author>
      <name>/u/jshin49</name>
      <uri>https://old.reddit.com/user/jshin49</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Remember our &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1nedq3i/we_just_released_the_worlds_first_70b/?sort=new"&gt;70B intermediate checkpoints release&lt;/a&gt;? We said we wanted to enable real research on training dynamics. Well, here's exactly the kind of work we hoped would happen.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;rBridge:&lt;/strong&gt; Use 1B models to predict whether your 32B model will be good at reasoning. Actually works.&lt;/p&gt; &lt;p&gt;The problem: Small models can't do reasoning (emergence happens at 7B+), so how do you know if your training recipe works without spending $200k?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Our solution:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Align evaluation with both pre-training objective AND target task&lt;/li&gt; &lt;li&gt;Use frontier model reasoning traces as gold labels&lt;/li&gt; &lt;li&gt;Weight tokens by task importance automatically&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Results:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;100x compute reduction vs baselines&lt;/li&gt; &lt;li&gt;Accurately predict which datasets are worth training on&lt;/li&gt; &lt;li&gt;R² = 0.826 predicting 32B performance from 1B proxy&lt;/li&gt; &lt;li&gt;Works zero-shot on new datasets&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Tested on: GSM8K, MATH500, ARC-C, MMLU Pro, CQA, HumanEval&lt;/p&gt; &lt;p&gt;Paper: &lt;a href="https://www.arxiv.org/abs/2509.21013"&gt;https://www.arxiv.org/abs/2509.21013&lt;/a&gt;&lt;/p&gt; &lt;p&gt;This is what open research looks like - building on each other's work to make LLM development accessible to everyone, not just companies with infinite compute.&lt;/p&gt; &lt;p&gt;Code coming soon. Apache 2.0 as always.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jshin49"&gt; /u/jshin49 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od0jw1/r_we_figured_out_how_to_predict_32b_model/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od0jw1/r_we_figured_out_how_to_predict_32b_model/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od0jw1/r_we_figured_out_how_to_predict_32b_model/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T06:13:40+00:00</published>
  </entry>
  <entry>
    <id>t3_1ocrocy</id>
    <title>DeepSeek-OCR - Lives up to the hype</title>
    <updated>2025-10-21T22:51:20+00:00</updated>
    <author>
      <name>/u/Bohdanowicz</name>
      <uri>https://old.reddit.com/user/Bohdanowicz</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocrocy/deepseekocr_lives_up_to_the_hype/"&gt; &lt;img alt="DeepSeek-OCR - Lives up to the hype" src="https://b.thumbs.redditmedia.com/q2Za3YAG4UtD5f1EPoF-xWngtth1gVchxREBKA2mc6k.jpg" title="DeepSeek-OCR - Lives up to the hype" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I decided to try this out. Dockerized the model with fastapi in a wsl environment. Gave it 10000 pdfs to convert to markdown.&lt;/p&gt; &lt;p&gt;Hardware - 1 x A6000 ADA on a Ryzen 1700 /w 32gb ram&lt;/p&gt; &lt;p&gt;Processed prompts: 100%|██████████| 1/1 [00:00&amp;lt;00:00, 3.29it/s, est. speed input: 3000.81 toks/s, output: 220.20 toks/s]&lt;/p&gt; &lt;p&gt;I'm averaging less than 1 second per page.&lt;/p&gt; &lt;p&gt;This is the real deal.&lt;/p&gt; &lt;p&gt;EDIT: Decided to share the docker build if anyone is interested. It wraps the model up nicely so you can try it out directly with the api. it uses the vllm-openapi 0.8.5 public docker image. &lt;/p&gt; &lt;p&gt;Also included a pdf to markdown utility which will process anything in the /data subfolder to .md just by running it since there is an issue using the batch processor directly via the api.&lt;/p&gt; &lt;p&gt;&lt;a href="https://preview.redd.it/se9r9dsnyjwf1.png?width=1458&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=fcd8118c3e1c167cc13d159579527a802e55fd84"&gt;https://preview.redd.it/se9r9dsnyjwf1.png?width=1458&amp;amp;format=png&amp;amp;auto=webp&amp;amp;s=fcd8118c3e1c167cc13d159579527a802e55fd84&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/Bogdanovich77/DeekSeek-OCR---Dockerized-API"&gt;https://github.com/Bogdanovich77/DeekSeek-OCR---Dockerized-API&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/Bohdanowicz"&gt; /u/Bohdanowicz &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocrocy/deepseekocr_lives_up_to_the_hype/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1ocrocy/deepseekocr_lives_up_to_the_hype/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1ocrocy/deepseekocr_lives_up_to_the_hype/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-21T22:51:20+00:00</published>
  </entry>
  <entry>
    <id>t3_1od1hw4</id>
    <title>hey Z.ai, two weeks was yesterday</title>
    <updated>2025-10-22T07:13:00+00:00</updated>
    <author>
      <name>/u/jacek2023</name>
      <uri>https://old.reddit.com/user/jacek2023</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od1hw4/hey_zai_two_weeks_was_yesterday/"&gt; &lt;img alt="hey Z.ai, two weeks was yesterday" src="https://preview.redd.it/lg6u60lj5mwf1.jpeg?width=640&amp;amp;crop=smart&amp;amp;auto=webp&amp;amp;s=fb37b472c5a42bbe348ff5652a5ce811e269f95d" title="hey Z.ai, two weeks was yesterday" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/jacek2023"&gt; /u/jacek2023 &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://i.redd.it/lg6u60lj5mwf1.jpeg"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1od1hw4/hey_zai_two_weeks_was_yesterday/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1od1hw4/hey_zai_two_weeks_was_yesterday/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-22T07:13:00+00:00</published>
  </entry>
  <entry>
    <id>t3_1mpk2va</id>
    <title>Announcing LocalLlama discord server &amp; bot!</title>
    <updated>2025-08-13T23:21:05+00:00</updated>
    <author>
      <name>/u/HOLUPREDICTIONS</name>
      <uri>https://old.reddit.com/user/HOLUPREDICTIONS</uri>
    </author>
    <content type="html">&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"&gt; &lt;img alt="Announcing LocalLlama discord server &amp;amp; bot!" src="https://b.thumbs.redditmedia.com/QBscWhXGvo8sy9oNNt-7et1ByOGRWY1UckDAudAWACM.jpg" title="Announcing LocalLlama discord server &amp;amp; bot!" /&gt; &lt;/a&gt; &lt;/td&gt;&lt;td&gt; &lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;INVITE: &lt;a href="https://discord.gg/rC922KfEwj"&gt;https://discord.gg/rC922KfEwj&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There used to be one old discord server for the subreddit but it was deleted by the previous mod.&lt;/p&gt; &lt;p&gt;Why? The subreddit has grown to 500k users - inevitably, some users like a niche community with more technical discussion and fewer memes (even if relevant).&lt;/p&gt; &lt;p&gt;We have a discord bot to test out open source models.&lt;/p&gt; &lt;p&gt;Better contest and events organization.&lt;/p&gt; &lt;p&gt;Best for quick questions or showcasing your rig!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/HOLUPREDICTIONS"&gt; /u/HOLUPREDICTIONS &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://www.reddit.com/gallery/1mpk2va"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"&gt;[comments]&lt;/a&gt;&lt;/span&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1mpk2va/announcing_localllama_discord_server_bot/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-08-13T23:21:05+00:00</published>
  </entry>
  <entry>
    <id>t3_1obqkpe</id>
    <title>Best Local LLMs - October 2025</title>
    <updated>2025-10-20T19:06:06+00:00</updated>
    <author>
      <name>/u/rm-rf-rm</name>
      <uri>https://old.reddit.com/user/rm-rf-rm</uri>
    </author>
    <content type="html">&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;Welcome to the first monthly &amp;quot;Best Local LLMs&amp;quot; post!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Share what your favorite models are right now &lt;strong&gt;and why.&lt;/strong&gt; Given the nature of the beast in evaluating LLMs (untrustworthiness of benchmarks, immature tooling, intrinsic stochasticity), please be as detailed as possible in describing your setup, nature of your usage (how much, personal/professional use), tools/frameworks/prompts etc.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Rules&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Should be open weights models&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;Applications&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;General&lt;/li&gt; &lt;li&gt;Agentic/Tool Use&lt;/li&gt; &lt;li&gt;Coding&lt;/li&gt; &lt;li&gt;Creative Writing/RP&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;(look for the top level comments for each Application and please thread your responses under that)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; &amp;#32; submitted by &amp;#32; &lt;a href="https://old.reddit.com/user/rm-rf-rm"&gt; /u/rm-rf-rm &lt;/a&gt; &lt;br /&gt; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1obqkpe/best_local_llms_october_2025/"&gt;[link]&lt;/a&gt;&lt;/span&gt; &amp;#32; &lt;span&gt;&lt;a href="https://old.reddit.com/r/LocalLLaMA/comments/1obqkpe/best_local_llms_october_2025/"&gt;[comments]&lt;/a&gt;&lt;/span&gt;</content>
    <link href="https://old.reddit.com/r/LocalLLaMA/comments/1obqkpe/best_local_llms_october_2025/"/>
    <category term="LocalLLaMA" label="r/LocalLLaMA"/>
    <published>2025-10-20T19:06:06+00:00</published>
  </entry>
</feed>
